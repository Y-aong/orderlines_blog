const t=JSON.parse('{"key":"v-430f738a","path":"/posts/Redis/redis1%E3%80%81%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84ziplist.html","title":"1、数据结构ziplist","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2023-07-15T00:00:00.000Z","category":["redis"],"tag":["zip list","数据结构"],"description":"1、数据结构ziplist 一、定义 ziplist是一个经过特殊编码的双向链表，它不存储指向上一个链表节点和指向下一个链表节点的指针，而是存储上一个节点长度和当前节点长度，通过牺牲部分读写性能，来换取高效的内存空间利用率，节约内存，是一种时间换空间的思想。只用在字段个数少，字段值小的场景里面 image-20230422094056447.png","head":[["meta",{"property":"og:url","content":"https://y-aong.github.io/orderlines_blog/orderlines_blog/posts/Redis/redis1%E3%80%81%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84ziplist.html"}],["meta",{"property":"og:site_name","content":"ORDERLINES"}],["meta",{"property":"og:title","content":"1、数据结构ziplist"}],["meta",{"property":"og:description","content":"1、数据结构ziplist 一、定义 ziplist是一个经过特殊编码的双向链表，它不存储指向上一个链表节点和指向下一个链表节点的指针，而是存储上一个节点长度和当前节点长度，通过牺牲部分读写性能，来换取高效的内存空间利用率，节约内存，是一种时间换空间的思想。只用在字段个数少，字段值小的场景里面 image-20230422094056447.png"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-03-17T09:50:53.000Z"}],["meta",{"property":"article:author","content":"Y-aong"}],["meta",{"property":"article:tag","content":"zip list"}],["meta",{"property":"article:tag","content":"数据结构"}],["meta",{"property":"article:published_time","content":"2023-07-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-17T09:50:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1、数据结构ziplist\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-15T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-17T09:50:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Y-aong\\",\\"url\\":\\"https://github.com/Y-aong\\"}]}"]]},"headers":[{"level":3,"title":"一、定义","slug":"一、定义","link":"#一、定义","children":[]},{"level":3,"title":"二、优点","slug":"二、优点","link":"#二、优点","children":[]},{"level":3,"title":"三、zlentry实体结构解析","slug":"三、zlentry实体结构解析","link":"#三、zlentry实体结构解析","children":[]},{"level":3,"title":"四、hash的是实现方式之一","slug":"四、hash的是实现方式之一","link":"#四、hash的是实现方式之一","children":[]}],"git":{"createdTime":1736258707000,"updatedTime":1742205053000,"contributors":[{"name":"Y-aong","email":"1627469727@qq.com","commits":2}]},"readingTime":{"minutes":2.9,"words":870},"filePathRelative":"posts/Redis/redis1、数据结构ziplist.md","localizedDate":"July 15, 2023","excerpt":"<h1> 1、数据结构ziplist</h1>\\n<h3> 一、定义</h3>\\n<p>ziplist是一个经过特殊编码的双向链表，它不存储指向上一个链表节点和指向下一个链表节点的指针，而是存储上一个节点长度和当前节点长度，通过牺牲部分读写性能，来换取高效的内存空间利用率，节约内存，是一种时间换空间的思想。只用在字段个数少，字段值小的场景里面</p>\\n<figure><img src=\\"https://s2.loli.net/2023/04/22/neEhItwyrRLOikC.png\\" alt=\\"image-20230422094056447.png\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>image-20230422094056447.png</figcaption></figure>","autoDesc":true}');export{t as data};
