const e=JSON.parse('{"key":"v-5381e496","path":"/posts/Mysql/mysql%E4%BC%98%E5%8C%964%E3%80%81%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96.html","title":"24、索引优化","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2023-07-15T00:00:00.000Z","category":["mysql"],"tag":["索引优化"],"description":"24、索引优化 一、总结：从 explain 执行计划入手 只有 explain 能告诉你当前 SQL 的执行状态 二、具体操作 1、小的结果集驱动大的结果集 小的数据集驱动大的数据集,减少内层表读取的次数 类似于嵌套循环 for(int i = 0; i &lt; 5; i++){ \\tfor(int i = 0; i &lt; 1000; i++){ \\t} } 如果小的循环在外层,对于数据库连接来说就只连接5次,进行5000次操作,如果1000在外,则需要进行1000次数据库连接,从而浪费资源，增加消耗.这就是为什么要小表驱动大表。","head":[["meta",{"property":"og:url","content":"https://y-aong.github.io/orderlines_blog/orderlines_blog/posts/Mysql/mysql%E4%BC%98%E5%8C%964%E3%80%81%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"ORDERLINES"}],["meta",{"property":"og:title","content":"24、索引优化"}],["meta",{"property":"og:description","content":"24、索引优化 一、总结：从 explain 执行计划入手 只有 explain 能告诉你当前 SQL 的执行状态 二、具体操作 1、小的结果集驱动大的结果集 小的数据集驱动大的数据集,减少内层表读取的次数 类似于嵌套循环 for(int i = 0; i &lt; 5; i++){ \\tfor(int i = 0; i &lt; 1000; i++){ \\t} } 如果小的循环在外层,对于数据库连接来说就只连接5次,进行5000次操作,如果1000在外,则需要进行1000次数据库连接,从而浪费资源，增加消耗.这就是为什么要小表驱动大表。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-03-17T09:50:53.000Z"}],["meta",{"property":"article:author","content":"Y-aong"}],["meta",{"property":"article:tag","content":"索引优化"}],["meta",{"property":"article:published_time","content":"2023-07-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-17T09:50:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"24、索引优化\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-15T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-17T09:50:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Y-aong\\",\\"url\\":\\"https://github.com/Y-aong\\"}]}"]]},"headers":[{"level":3,"title":"一、总结：从 explain 执行计划入手","slug":"一、总结-从-explain-执行计划入手","link":"#一、总结-从-explain-执行计划入手","children":[]},{"level":3,"title":"二、具体操作","slug":"二、具体操作","link":"#二、具体操作","children":[]}],"git":{"createdTime":1742205053000,"updatedTime":1742205053000,"contributors":[{"name":"Y-aong","email":"1627469727@qq.com","commits":1}]},"readingTime":{"minutes":2.58,"words":773},"filePathRelative":"posts/Mysql/mysql优化4、索引优化.md","localizedDate":"July 15, 2023","excerpt":"<h1> 24、索引优化</h1>\\n<h3> 一、总结：从 explain 执行计划入手</h3>\\n<p>只有 explain 能告诉你当前 SQL 的执行状态</p>\\n<h3> 二、具体操作</h3>\\n<h4> 1、小的结果集驱动大的结果集</h4>\\n<div class=\\"language-angular2html line-numbers-mode\\" data-ext=\\"angular2html\\"><pre class=\\"language-angular2html\\"><code>小的数据集驱动大的数据集,减少内层表读取的次数\\n\\n类似于嵌套循环\\nfor(int i = 0; i &lt; 5; i++){\\n\\tfor(int i = 0; i &lt; 1000; i++){\\n\\n\\t}\\n}\\n如果小的循环在外层,对于数据库连接来说就只连接5次,进行5000次操作,如果1000在外,则需要进行1000次数据库连接,从而浪费资源，增加消耗.这就是为什么要小表驱动大表。\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
