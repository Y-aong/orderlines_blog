const e=JSON.parse('{"key":"v-e4e83662","path":"/posts/Mysql/basic2%E3%80%81b%E6%A0%91%E5%92%8Cb%E5%8A%A0%E6%A0%91.html","title":"2、B树和B加树的区别","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2023-07-15T00:00:00.000Z","category":["mysql"],"tag":["explain","mysql调优"],"description":"2、B树和B加树的区别 一、B-Tree介绍 B-Tree是一种平衡的多路查找树,B树允许一个节点存放多个数据. 这样可以在尽可能减少树的深度的同时,存放更多的数据(把瘦高的树变的矮胖). B-Tree中所有节点的子树个数的最大值称为B-Tree的阶,用m表示.一颗m阶的B树,如果不为空,就必须满足以下条件. m阶的B-Tree满足以下条件: 每个节点最多拥有m-1个关键字(根节点除外),也就是m个子树 根节点至少有两个子树(可以没有子树,有就必须是两个) 分支节点至少有(m/2)颗子树 (除去根节点和叶子节点其他都是分支节点) 所有叶子节点都在同一层,并且以升序排序","head":[["meta",{"property":"og:url","content":"https://y-aong.github.io/orderlines_blog/orderlines_blog/posts/Mysql/basic2%E3%80%81b%E6%A0%91%E5%92%8Cb%E5%8A%A0%E6%A0%91.html"}],["meta",{"property":"og:site_name","content":"ORDERLINES"}],["meta",{"property":"og:title","content":"2、B树和B加树的区别"}],["meta",{"property":"og:description","content":"2、B树和B加树的区别 一、B-Tree介绍 B-Tree是一种平衡的多路查找树,B树允许一个节点存放多个数据. 这样可以在尽可能减少树的深度的同时,存放更多的数据(把瘦高的树变的矮胖). B-Tree中所有节点的子树个数的最大值称为B-Tree的阶,用m表示.一颗m阶的B树,如果不为空,就必须满足以下条件. m阶的B-Tree满足以下条件: 每个节点最多拥有m-1个关键字(根节点除外),也就是m个子树 根节点至少有两个子树(可以没有子树,有就必须是两个) 分支节点至少有(m/2)颗子树 (除去根节点和叶子节点其他都是分支节点) 所有叶子节点都在同一层,并且以升序排序"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-03-17T09:50:53.000Z"}],["meta",{"property":"article:author","content":"Y-aong"}],["meta",{"property":"article:tag","content":"explain"}],["meta",{"property":"article:tag","content":"mysql调优"}],["meta",{"property":"article:published_time","content":"2023-07-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-17T09:50:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2、B树和B加树的区别\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-15T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-17T09:50:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Y-aong\\",\\"url\\":\\"https://github.com/Y-aong\\"}]}"]]},"headers":[{"level":3,"title":"一、B-Tree介绍","slug":"一、b-tree介绍","link":"#一、b-tree介绍","children":[]},{"level":3,"title":"二、B+Tree","slug":"二、b-tree","link":"#二、b-tree","children":[]}],"git":{"createdTime":1736258707000,"updatedTime":1742205053000,"contributors":[{"name":"Y-aong","email":"1627469727@qq.com","commits":2}]},"readingTime":{"minutes":3.7,"words":1111},"filePathRelative":"posts/Mysql/basic2、b树和b加树.md","localizedDate":"July 15, 2023","excerpt":"<h1> 2、B树和B加树的区别</h1>\\n<h3> 一、B-Tree介绍</h3>\\n<p>B-Tree是一种平衡的多路查找树,B树允许一个节点存放多个数据. 这样可以在尽可能减少树的深度的同时,存放更多的数据(把瘦高的树变的矮胖).</p>\\n<p>B-Tree中所有节点的子树个数的最大值称为B-Tree的阶,用m表示.一颗m阶的B树,如果不为空,就必须满足以下条件.</p>\\n<p>m阶的B-Tree满足以下条件:</p>\\n<ol>\\n<li>每个节点最多拥有m-1个关键字(根节点除外),也就是m个子树</li>\\n<li>根节点至少有两个子树(可以没有子树,有就必须是两个)</li>\\n<li>分支节点至少有(m/2)颗子树 (除去根节点和叶子节点其他都是分支节点)</li>\\n<li>所有叶子节点都在同一层,并且以升序排序</li>\\n</ol>","autoDesc":true}');export{e as data};
