const n=JSON.parse('{"key":"v-04d7a41f","path":"/posts/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/Flask%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/5%E3%80%81%E8%AF%B7%E6%B1%82%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html","title":"5、请求的生命周期","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2024-03-05T00:00:00.000Z","category":["源码分析","flask"],"tag":["源码分析","flask"],"description":"5、请求的生命周期 请求的生命周期这个是比较复杂的我们通过两个方面来进行分析，分别用应用上下文和请求上下文，以及before_request，after_request等处理函数进行分析 源码部分 def wsgi_app( self, environ: WSGIEnvironment, start_response: StartResponse ) -&gt; cabc.Iterable[bytes]: ctx = self.request_context(environ) error: BaseException | None = None try: try: ctx.push() response = self.full_dispatch_request() except Exception as e: error = e response = self.handle_exception(e) except: # noqa: B001 error = sys.exc_info()[1] raise return response(environ, start_response) finally: if \\"werkzeug.debug.preserve_context\\" in environ: environ[\\"werkzeug.debug.preserve_context\\"](_cv_app.get()) environ[\\"werkzeug.debug.preserve_context\\"](_cv_request.get()) if error is not None and self.should_ignore_error(error): error = None ctx.pop(error)","head":[["meta",{"property":"og:url","content":"https://y-aong.github.io/orderlines_blog/orderlines_blog/posts/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/Flask%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/5%E3%80%81%E8%AF%B7%E6%B1%82%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html"}],["meta",{"property":"og:site_name","content":"ORDERLINES"}],["meta",{"property":"og:title","content":"5、请求的生命周期"}],["meta",{"property":"og:description","content":"5、请求的生命周期 请求的生命周期这个是比较复杂的我们通过两个方面来进行分析，分别用应用上下文和请求上下文，以及before_request，after_request等处理函数进行分析 源码部分 def wsgi_app( self, environ: WSGIEnvironment, start_response: StartResponse ) -&gt; cabc.Iterable[bytes]: ctx = self.request_context(environ) error: BaseException | None = None try: try: ctx.push() response = self.full_dispatch_request() except Exception as e: error = e response = self.handle_exception(e) except: # noqa: B001 error = sys.exc_info()[1] raise return response(environ, start_response) finally: if \\"werkzeug.debug.preserve_context\\" in environ: environ[\\"werkzeug.debug.preserve_context\\"](_cv_app.get()) environ[\\"werkzeug.debug.preserve_context\\"](_cv_request.get()) if error is not None and self.should_ignore_error(error): error = None ctx.pop(error)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-03-17T09:50:53.000Z"}],["meta",{"property":"article:author","content":"Y-aong"}],["meta",{"property":"article:tag","content":"源码分析"}],["meta",{"property":"article:tag","content":"flask"}],["meta",{"property":"article:published_time","content":"2024-03-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-17T09:50:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5、请求的生命周期\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-05T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-17T09:50:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Y-aong\\",\\"url\\":\\"https://github.com/Y-aong\\"}]}"]]},"headers":[{"level":3,"title":"一、上下文操作","slug":"一、上下文操作","link":"#一、上下文操作","children":[]},{"level":3,"title":"二、处理函数运行","slug":"二、处理函数运行","link":"#二、处理函数运行","children":[]},{"level":3,"title":"三、生命周期","slug":"三、生命周期","link":"#三、生命周期","children":[]}],"git":{"createdTime":1736258707000,"updatedTime":1742205053000,"contributors":[{"name":"Y-aong","email":"1627469727@qq.com","commits":2}]},"readingTime":{"minutes":4.36,"words":1307},"filePathRelative":"posts/源码分析/Flask源码分析/5、请求的生命周期.md","localizedDate":"March 5, 2024","excerpt":"<h1> 5、请求的生命周期</h1>\\n<p>请求的生命周期这个是比较复杂的我们通过两个方面来进行分析，分别用应用上下文和请求上下文，以及before_request，after_request等处理函数进行分析</p>\\n<p>源码部分</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code>    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">wsgi_app</span><span class=\\"token punctuation\\">(</span>\\n        self<span class=\\"token punctuation\\">,</span> environ<span class=\\"token punctuation\\">:</span> WSGIEnvironment<span class=\\"token punctuation\\">,</span> start_response<span class=\\"token punctuation\\">:</span> StartResponse\\n    <span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> cabc<span class=\\"token punctuation\\">.</span>Iterable<span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">bytes</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span>\\n        ctx <span class=\\"token operator\\">=</span> self<span class=\\"token punctuation\\">.</span>request_context<span class=\\"token punctuation\\">(</span>environ<span class=\\"token punctuation\\">)</span>\\n        error<span class=\\"token punctuation\\">:</span> BaseException <span class=\\"token operator\\">|</span> <span class=\\"token boolean\\">None</span> <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">None</span>\\n        <span class=\\"token keyword\\">try</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">try</span><span class=\\"token punctuation\\">:</span>\\n                ctx<span class=\\"token punctuation\\">.</span>push<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n                response <span class=\\"token operator\\">=</span> self<span class=\\"token punctuation\\">.</span>full_dispatch_request<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">except</span> Exception <span class=\\"token keyword\\">as</span> e<span class=\\"token punctuation\\">:</span>\\n                error <span class=\\"token operator\\">=</span> e\\n                response <span class=\\"token operator\\">=</span> self<span class=\\"token punctuation\\">.</span>handle_exception<span class=\\"token punctuation\\">(</span>e<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">except</span><span class=\\"token punctuation\\">:</span>  <span class=\\"token comment\\"># noqa: B001</span>\\n                error <span class=\\"token operator\\">=</span> sys<span class=\\"token punctuation\\">.</span>exc_info<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span>\\n                <span class=\\"token keyword\\">raise</span>\\n            <span class=\\"token keyword\\">return</span> response<span class=\\"token punctuation\\">(</span>environ<span class=\\"token punctuation\\">,</span> start_response<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">finally</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token string\\">\\"werkzeug.debug.preserve_context\\"</span> <span class=\\"token keyword\\">in</span> environ<span class=\\"token punctuation\\">:</span>\\n                environ<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"werkzeug.debug.preserve_context\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">(</span>_cv_app<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n                environ<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"werkzeug.debug.preserve_context\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">(</span>_cv_request<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\n            <span class=\\"token keyword\\">if</span> error <span class=\\"token keyword\\">is</span> <span class=\\"token keyword\\">not</span> <span class=\\"token boolean\\">None</span> <span class=\\"token keyword\\">and</span> self<span class=\\"token punctuation\\">.</span>should_ignore_error<span class=\\"token punctuation\\">(</span>error<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n                error <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">None</span>\\n\\n            ctx<span class=\\"token punctuation\\">.</span>pop<span class=\\"token punctuation\\">(</span>error<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
