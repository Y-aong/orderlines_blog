import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-2d0f66e1.js";const p={},e=t(`<h1 id="_2、flask的启动过程" tabindex="-1"><a class="header-anchor" href="#_2、flask的启动过程" aria-hidden="true">#</a> 2、flask的启动过程</h1><h3 id="一、实例化对象的过程" tabindex="-1"><a class="header-anchor" href="#一、实例化对象的过程" aria-hidden="true">#</a> 一、实例化对象的过程</h3><p>我们需要首先明白一个对象实例化会做那些事情</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">cls_instance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;我是类属性&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token number">1</span>


<span class="token keyword">def</span> <span class="token function">init_instance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;我是实例属性&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token number">2</span>


<span class="token keyword">class</span> <span class="token class-name">Demo</span><span class="token punctuation">:</span>
    instance <span class="token operator">=</span> cls_instance<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>ini <span class="token operator">=</span> init_instance<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;我是call方法&#39;</span><span class="token punctuation">)</span>


app <span class="token operator">=</span> Demo<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 我是类属性</span>
<span class="token comment"># 我是实例属性</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以看出来一个类进行初始化需要先执行类属性，接着执行实例属性，当请求过来的时候会执行<code>__call__</code>方法</p><p>那么Flask中的call方法是什么时候执行的呢？</p><p>我们可以先改造一下flask</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>
        self<span class="token punctuation">,</span> environ<span class="token punctuation">:</span> WSGIEnvironment<span class="token punctuation">,</span> start_response<span class="token punctuation">:</span> StartResponse
    <span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> cabc<span class="token punctuation">.</span>Iterable<span class="token punctuation">[</span><span class="token builtin">bytes</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;The WSGI server calls the Flask application object as the
        WSGI application. This calls :meth:\`wsgi_app\`, which can be
        wrapped to apply middleware.
        &quot;&quot;&quot;</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;call&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>wsgi_app<span class="token punctuation">(</span>environ<span class="token punctuation">,</span> start_response<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当我们发送请求的时候会打印call,因此我们在分析flask的启动过程只需要分析以下代码就可以了，就是 Flask(<strong>name</strong>),路由添加，和app.run这三部分就可以了</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask

app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/index&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token string">&#39;1231&#39;</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二、flask实例化过程" tabindex="-1"><a class="header-anchor" href="#二、flask实例化过程" aria-hidden="true">#</a> 二、flask实例化过程</h3><h4 id="flask类的构造" tabindex="-1"><a class="header-anchor" href="#flask类的构造" aria-hidden="true">#</a> Flask类的构造</h4><p><strong>Scaffold</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Scaffold</span><span class="token punctuation">:</span>
    name<span class="token punctuation">:</span> <span class="token builtin">str</span>
    _static_folder<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span>
    _static_url_path<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>
        self<span class="token punctuation">,</span>
        import_name<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
        static_folder<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> os<span class="token punctuation">.</span>PathLike<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        static_url_path<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        template_folder<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> os<span class="token punctuation">.</span>PathLike<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        root_path<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>import_name <span class="token operator">=</span> import_name
        self<span class="token punctuation">.</span>static_folder <span class="token operator">=</span> static_folder  <span class="token comment"># type: ignore</span>
        self<span class="token punctuation">.</span>static_url_path <span class="token operator">=</span> static_url_path
        self<span class="token punctuation">.</span>template_folder <span class="token operator">=</span> template_folder
        <span class="token keyword">if</span> root_path <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            root_path <span class="token operator">=</span> get_root_path<span class="token punctuation">(</span>self<span class="token punctuation">.</span>import_name<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>root_path <span class="token operator">=</span> root_path
        self<span class="token punctuation">.</span>view_functions<span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        self<span class="token punctuation">.</span>error_handler_spec <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>before_request_func <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>after_request_funcs <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>teardown_request_funcs <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>template_context_processors<span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token boolean">None</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>_default_template_ctx_processor<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>url_value_preprocessors<span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>url_default_functions <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>APP</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">App</span><span class="token punctuation">(</span>Scaffold<span class="token punctuation">)</span><span class="token punctuation">:</span>
    aborter_class <span class="token operator">=</span> Aborter
    jinja_environment <span class="token operator">=</span> Environment
    app_ctx_globals_class <span class="token operator">=</span> _AppCtxGlobals
    config_class <span class="token operator">=</span> Config
    secret_key <span class="token operator">=</span> ConfigAttribute<span class="token punctuation">[</span>t<span class="token punctuation">.</span>Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">bytes</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">&quot;SECRET_KEY&quot;</span><span class="token punctuation">)</span>
    url_rule_class <span class="token operator">=</span> Rule
    url_map_class <span class="token operator">=</span> Map
    test_client_class<span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">[</span>FlaskClient<span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span>
    test_cli_runner_class<span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">[</span>FlaskCliRunner<span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span>
    default_config<span class="token punctuation">:</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>Any<span class="token punctuation">]</span>
    response_class<span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">[</span>Response<span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>
        self<span class="token punctuation">,</span>
        import_name<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
        static_url_path<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        static_folder<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> os<span class="token punctuation">.</span>PathLike<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token string">&quot;static&quot;</span><span class="token punctuation">,</span>
        static_host<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        host_matching<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
        subdomain_matching<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
        template_folder<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> os<span class="token punctuation">.</span>PathLike<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token string">&quot;templates&quot;</span><span class="token punctuation">,</span>
        instance_path<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        instance_relative_config<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
        root_path<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>
            import_name<span class="token operator">=</span>import_name<span class="token punctuation">,</span>
            static_folder<span class="token operator">=</span>static_folder<span class="token punctuation">,</span>
            static_url_path<span class="token operator">=</span>static_url_path<span class="token punctuation">,</span>
            template_folder<span class="token operator">=</span>template_folder<span class="token punctuation">,</span>
            root_path<span class="token operator">=</span>root_path<span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>instance_path <span class="token operator">=</span> instance_path
        self<span class="token punctuation">.</span>config <span class="token operator">=</span> self<span class="token punctuation">.</span>make_config<span class="token punctuation">(</span>instance_relative_config<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>aborter <span class="token operator">=</span> self<span class="token punctuation">.</span>make_aborter<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>json<span class="token punctuation">:</span> JSONProvider <span class="token operator">=</span> self<span class="token punctuation">.</span>json_provider_class<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>url_build_error_handlers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        self<span class="token punctuation">.</span>teardown_appcontext_funcs<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">[</span>ft<span class="token punctuation">.</span>TeardownCallable<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        self<span class="token punctuation">.</span>shell_context_processors<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">[</span>ft<span class="token punctuation">.</span>ShellContextProcessorCallable<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        self<span class="token punctuation">.</span>blueprints<span class="token punctuation">:</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> Blueprint<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        self<span class="token punctuation">.</span>extensions<span class="token punctuation">:</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>Any<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        self<span class="token punctuation">.</span>url_map <span class="token operator">=</span> self<span class="token punctuation">.</span>url_map_class<span class="token punctuation">(</span>host_matching<span class="token operator">=</span>host_matching<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>subdomain_matching <span class="token operator">=</span> subdomain_matching
        self<span class="token punctuation">.</span>_got_first_request <span class="token operator">=</span> <span class="token boolean">False</span>
        self<span class="token punctuation">.</span>cli<span class="token punctuation">.</span>name <span class="token operator">=</span> self<span class="token punctuation">.</span>name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Flask</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Flask</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">:</span>
    app_ctx_globals_class <span class="token operator">=</span> _AppCtxGlobals
    config_class <span class="token operator">=</span> Config
            self<span class="token punctuation">.</span>url_map <span class="token operator">=</span> self<span class="token punctuation">.</span>url_map_class<span class="token punctuation">(</span>host_matching<span class="token operator">=</span>host_matching<span class="token punctuation">)</span>

    url_map_class <span class="token operator">=</span> Map
    default_config <span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    request_class<span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">[</span>Request<span class="token punctuation">]</span> <span class="token operator">=</span> Request
    response_class<span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">[</span>Response<span class="token punctuation">]</span> <span class="token operator">=</span> Response
    session_interface<span class="token punctuation">:</span> SessionInterface <span class="token operator">=</span> SecureCookieSessionInterface<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>
        self<span class="token punctuation">,</span>
        import_name<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
        static_url_path<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        static_folder<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> os<span class="token punctuation">.</span>PathLike<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token string">&quot;static&quot;</span><span class="token punctuation">,</span>
        static_host<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        host_matching<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
        subdomain_matching<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
        template_folder<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> os<span class="token punctuation">.</span>PathLike<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token string">&quot;templates&quot;</span><span class="token punctuation">,</span>
        instance_path<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        instance_relative_config<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
        root_path<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>
            import_name<span class="token operator">=</span>import_name<span class="token punctuation">,</span>
            static_url_path<span class="token operator">=</span>static_url_path<span class="token punctuation">,</span>
            static_folder<span class="token operator">=</span>static_folder<span class="token punctuation">,</span>
            static_host<span class="token operator">=</span>static_host<span class="token punctuation">,</span>
            host_matching<span class="token operator">=</span>host_matching<span class="token punctuation">,</span>
            subdomain_matching<span class="token operator">=</span>subdomain_matching<span class="token punctuation">,</span>
            template_folder<span class="token operator">=</span>template_folder<span class="token punctuation">,</span>
            instance_path<span class="token operator">=</span>instance_path<span class="token punctuation">,</span>
            instance_relative_config<span class="token operator">=</span>instance_relative_config<span class="token punctuation">,</span>
            root_path<span class="token operator">=</span>root_path<span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>has_static_folder<span class="token punctuation">:</span>
            self_ref <span class="token operator">=</span> weakref<span class="token punctuation">.</span>ref<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>add_url_rule<span class="token punctuation">(</span>
                <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>static_url_path<span class="token punctuation">}</span></span><span class="token string">/&lt;path:filename&gt;&quot;</span></span><span class="token punctuation">,</span>
                endpoint<span class="token operator">=</span><span class="token string">&quot;static&quot;</span><span class="token punctuation">,</span>
                host<span class="token operator">=</span>static_host<span class="token punctuation">,</span>
                view_func<span class="token operator">=</span><span class="token keyword">lambda</span> <span class="token operator">**</span>kw<span class="token punctuation">:</span> self_ref<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_static_file<span class="token punctuation">(</span><span class="token operator">**</span>kw<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment"># type: ignore # noqa: B950</span>
            <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当我们排除掉一些模版静态文件之后我们可以得到以下部分</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Flask</span><span class="token punctuation">:</span>
	default_config <span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    url_rule_class <span class="token operator">=</span> Rule
    url_map_class <span class="token operator">=</span> Map
    request_class<span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">[</span>Request<span class="token punctuation">]</span> <span class="token operator">=</span> Request
    response_class<span class="token punctuation">:</span> <span class="token builtin">type</span><span class="token punctuation">[</span>Response<span class="token punctuation">]</span> <span class="token operator">=</span> Response
    session_interface<span class="token punctuation">:</span> SessionInterface <span class="token operator">=</span> SecureCookieSessionInterface<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
	<span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>view_functions<span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        self<span class="token punctuation">.</span>error_handler_spec <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>before_request_func <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>after_request_funcs <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>teardown_request_funcs <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>template_context_processors<span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token boolean">None</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>_default_template_ctx_processor<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>url_value_preprocessors<span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>url_default_functions <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>url_map <span class="token operator">=</span> self<span class="token punctuation">.</span>url_map_class<span class="token punctuation">(</span>host_matching<span class="token operator">=</span>host_matching<span class="token punctuation">)</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>has_static_folder<span class="token punctuation">:</span>
            self_ref <span class="token operator">=</span> weakref<span class="token punctuation">.</span>ref<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>add_url_rule<span class="token punctuation">(</span>
                <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>static_url_path<span class="token punctuation">}</span></span><span class="token string">/&lt;path:filename&gt;&quot;</span></span><span class="token punctuation">,</span>
                endpoint<span class="token operator">=</span><span class="token string">&quot;static&quot;</span><span class="token punctuation">,</span>
                host<span class="token operator">=</span>static_host<span class="token punctuation">,</span>
                view_func<span class="token operator">=</span><span class="token keyword">lambda</span> <span class="token operator">**</span>kw<span class="token punctuation">:</span> self_ref<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_static_file<span class="token punctuation">(</span><span class="token operator">**</span>kw<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment"># type: ignore # noqa: B950</span>
            <span class="token punctuation">)</span>
        
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来我们一般的flask程序如下</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask

config <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;SECRET_KEY&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;woaijmy&quot;</span><span class="token punctuation">}</span>
<span class="token comment"># 实例化Flask</span>
app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>
<span class="token comment"># 加载配置参数</span>
app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>from_object<span class="token punctuation">(</span>config<span class="token punctuation">)</span>

<span class="token comment"># 添加前置处理参数</span>
<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>before_request</span>
<span class="token keyword">def</span> <span class="token function">before</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;before&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 添加后置处理参数</span>
<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>after_request</span>
<span class="token keyword">def</span> <span class="token function">after</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;after&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 定义视图函数</span>
<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/index&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token string">&#39;1231&#39;</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;url_map::&#39;</span><span class="token punctuation">,</span> app<span class="token punctuation">.</span>url_map<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;before_request::&#39;</span><span class="token punctuation">,</span> app<span class="token punctuation">.</span>before_request_funcs<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;after_request::&#39;</span><span class="token punctuation">,</span> app<span class="token punctuation">.</span>after_request_funcs<span class="token punctuation">)</span>
    <span class="token comment"># 运行</span>
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_01、初始化" tabindex="-1"><a class="header-anchor" href="#_01、初始化" aria-hidden="true">#</a> 01、初始化</h4><p>我们可以知道flask初始化（Flask(<code>__name__</code>)）基本实现了以下这些功能</p><ul><li>加载flask默认配置</li><li>声明response、request、session对象</li><li>定义函数列表 <ul><li>error_handler_spec：异常处理函数</li><li>before_request_func：请求前处理函数</li><li>after_request_funcs：请求后处理函数</li><li>teardown_request_funcs：请求关闭处理函数</li><li>view_functions：视图处理函数</li><li>url_default_functions：url默认处理函数</li></ul></li><li>定义url_map，添加静态文件路由</li></ul><p>以上我们已经知道了初始化要做的一些事情，接下来配置信息</p><h4 id="_02、配置信息" tabindex="-1"><a class="header-anchor" href="#_02、配置信息" aria-hidden="true">#</a> 02、配置信息</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Config</span><span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">from_object</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> obj<span class="token punctuation">:</span> <span class="token builtin">object</span> <span class="token operator">|</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            obj <span class="token operator">=</span> import_string<span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
        <span class="token keyword">for</span> key <span class="token keyword">in</span> <span class="token builtin">dir</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> key<span class="token punctuation">.</span>isupper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                self<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个就是比较简单，直接对于config对象进行添加属性即可</p><h4 id="_03、定义处理函数" tabindex="-1"><a class="header-anchor" href="#_03、定义处理函数" aria-hidden="true">#</a> 03、定义处理函数</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 添加前置处理参数</span>
<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>before_request</span>
<span class="token keyword">def</span> <span class="token function">before</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;before&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 添加后置处理参数</span>
<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>after_request</span>
<span class="token keyword">def</span> <span class="token function">after</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;after&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个配置请求处理函数它的实现逻辑呢，实际就是将前置处理函数放到<code>after_request_funcs</code>，其他以<code>func</code>结尾的同样也是这样的逻辑</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token decorator annotation punctuation">@setupmethod</span>
    <span class="token keyword">def</span> <span class="token function">before_request</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> f<span class="token punctuation">:</span> T_before_request<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> T_before_request<span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>before_request_funcs<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>f<span class="token punctuation">)</span>
        <span class="token keyword">return</span> f
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_04、定义视图函数" tabindex="-1"><a class="header-anchor" href="#_04、定义视图函数" aria-hidden="true">#</a> 04、定义视图函数</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>	<span class="token decorator annotation punctuation">@setupmethod</span>
    <span class="token keyword">def</span> <span class="token function">route</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> rule<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token operator">**</span>options<span class="token punctuation">:</span> t<span class="token punctuation">.</span>Any<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> t<span class="token punctuation">.</span>Callable<span class="token punctuation">[</span><span class="token punctuation">[</span>T_route<span class="token punctuation">]</span><span class="token punctuation">,</span> T_route<span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token keyword">def</span> <span class="token function">decorator</span><span class="token punctuation">(</span>f<span class="token punctuation">:</span> T_route<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> T_route<span class="token punctuation">:</span>
            endpoint <span class="token operator">=</span> options<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">&quot;endpoint&quot;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>add_url_rule<span class="token punctuation">(</span>rule<span class="token punctuation">,</span> endpoint<span class="token punctuation">,</span> f<span class="token punctuation">,</span> <span class="token operator">**</span>options<span class="token punctuation">)</span>
            <span class="token keyword">return</span> f

        <span class="token keyword">return</span> decorator
	<span class="token decorator annotation punctuation">@setupmethod</span>
    <span class="token keyword">def</span> <span class="token function">add_url_rule</span><span class="token punctuation">(</span>
        self<span class="token punctuation">,</span>
        rule<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
        endpoint<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        view_func<span class="token punctuation">:</span> ft<span class="token punctuation">.</span>RouteCallable <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        provide_automatic_options<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        <span class="token operator">**</span>options<span class="token punctuation">:</span> t<span class="token punctuation">.</span>Any<span class="token punctuation">,</span>
    <span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
         <span class="token keyword">if</span> endpoint <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            endpoint <span class="token operator">=</span> _endpoint_from_view_func<span class="token punctuation">(</span>view_func<span class="token punctuation">)</span>  <span class="token comment"># type: ignore</span>
        options<span class="token punctuation">[</span><span class="token string">&quot;endpoint&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> endpoint
        methods <span class="token operator">=</span> options<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">&quot;methods&quot;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>

        <span class="token keyword">if</span> methods <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            methods <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>view_func<span class="token punctuation">,</span> <span class="token string">&quot;methods&quot;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>methods<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">raise</span> TypeError<span class="token punctuation">(</span>
                <span class="token string">&quot;Allowed methods must be a list of strings, for&quot;</span>
                <span class="token string">&#39; example: @app.route(..., methods=[&quot;POST&quot;])&#39;</span>
            <span class="token punctuation">)</span>
        methods <span class="token operator">=</span> <span class="token punctuation">{</span>item<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> item <span class="token keyword">in</span> methods<span class="token punctuation">}</span>
        required_methods <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token builtin">getattr</span><span class="token punctuation">(</span>view_func<span class="token punctuation">,</span> <span class="token string">&quot;required_methods&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> provide_automatic_options <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            provide_automatic_options <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>view_func<span class="token punctuation">,</span> <span class="token string">&quot;provide_automatic_options&quot;</span><span class="token punctuation">,</span> <span class="token boolean">None</span> <span class="token punctuation">)</span>

        <span class="token keyword">if</span> provide_automatic_options <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token string">&quot;OPTIONS&quot;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> methods<span class="token punctuation">:</span>
                provide_automatic_options <span class="token operator">=</span> <span class="token boolean">True</span>
                required_methods<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">&quot;OPTIONS&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                provide_automatic_options <span class="token operator">=</span> <span class="token boolean">False</span>

        <span class="token comment"># Add the required methods now.</span>
        methods <span class="token operator">|</span><span class="token operator">=</span> required_methods
        rule_obj <span class="token operator">=</span> self<span class="token punctuation">.</span>url_rule_class<span class="token punctuation">(</span>rule<span class="token punctuation">,</span> methods<span class="token operator">=</span>methods<span class="token punctuation">,</span> <span class="token operator">**</span>options<span class="token punctuation">)</span>
        rule_obj<span class="token punctuation">.</span>provide_automatic_options <span class="token operator">=</span> provide_automatic_options  <span class="token comment"># type: ignore[attr-defined]</span>
        self<span class="token punctuation">.</span>url_map<span class="token punctuation">.</span>add<span class="token punctuation">(</span>rule_obj<span class="token punctuation">)</span>
        <span class="token keyword">if</span> view_func <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            old_func <span class="token operator">=</span> self<span class="token punctuation">.</span>view_functions<span class="token punctuation">.</span>get<span class="token punctuation">(</span>endpoint<span class="token punctuation">)</span>
            <span class="token keyword">if</span> old_func <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span> <span class="token keyword">and</span> old_func <span class="token operator">!=</span> view_func<span class="token punctuation">:</span>
                <span class="token keyword">raise</span> AssertionError<span class="token punctuation">(</span>
                    <span class="token string">&quot;View function mapping is overwriting an existing&quot;</span>
                    <span class="token string-interpolation"><span class="token string">f&quot; endpoint function: </span><span class="token interpolation"><span class="token punctuation">{</span>endpoint<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
                <span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>view_functions<span class="token punctuation">[</span>endpoint<span class="token punctuation">]</span> <span class="token operator">=</span> view_func
            
     <span class="token decorator annotation punctuation">@setupmethod</span>
    <span class="token keyword">def</span> <span class="token function">endpoint</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> endpoint<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> t<span class="token punctuation">.</span>Callable<span class="token punctuation">[</span><span class="token punctuation">[</span>F<span class="token punctuation">]</span><span class="token punctuation">,</span> F<span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token keyword">def</span> <span class="token function">decorator</span><span class="token punctuation">(</span>f<span class="token punctuation">:</span> F<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> F<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>view_functions<span class="token punctuation">[</span>endpoint<span class="token punctuation">]</span> <span class="token operator">=</span> f
            <span class="token keyword">return</span> f

        <span class="token keyword">return</span> decorator
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里是稍微复杂点，我们可以理出来以下事情</p><ul><li><p>获取endpoint</p></li><li><p>获取methods</p></li><li><p>创建rule_obj并放入到url_map</p></li><li><p>获取view_func，以endpoint为key，以view_func为值放入到view_functions</p><p>所以这里就是定义视图函数，定义url_rule并放到url_map中，将视图函数放入到view_functions</p><ul><li><p>url_map：&lt;Rule &#39;/index&#39; (HEAD, GET, OPTIONS) -&gt; index&gt;, url,请求方法，endpoint的集合</p></li><li><p>view_funcs：&#39;index&#39;: &lt;function index at 0x000001B61CC30AF0&gt;endpoint为key，视图函数为值的字典列表</p></li></ul></li></ul><p><strong>这里的endpiont就是视图函数和url的中间值，我们可以利用endpoint找到url,也可以使用endpoint找到视图函数</strong></p><h4 id="_05、app-run" tabindex="-1"><a class="header-anchor" href="#_05、app-run" aria-hidden="true">#</a> 05、app.run</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>
        self<span class="token punctuation">,</span>
        host<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        port<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        debug<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        load_dotenv<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">,</span>
        <span class="token operator">**</span>options<span class="token punctuation">:</span> t<span class="token punctuation">.</span>Any<span class="token punctuation">,</span>
    <span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>environ<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;FLASK_RUN_FROM_CLI&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> is_running_from_reloader<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                click<span class="token punctuation">.</span>secho<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token keyword">if</span> get_load_dotenv<span class="token punctuation">(</span>load_dotenv<span class="token punctuation">)</span><span class="token punctuation">:</span>
            cli<span class="token punctuation">.</span>load_dotenv<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token string">&quot;FLASK_DEBUG&quot;</span> <span class="token keyword">in</span> os<span class="token punctuation">.</span>environ<span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>debug <span class="token operator">=</span> get_debug_flag<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> debug <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>debug <span class="token operator">=</span> <span class="token builtin">bool</span><span class="token punctuation">(</span>debug<span class="token punctuation">)</span>
        server_name <span class="token operator">=</span> self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;SERVER_NAME&quot;</span><span class="token punctuation">)</span>
        sn_host <span class="token operator">=</span> sn_port <span class="token operator">=</span> <span class="token boolean">None</span>
        <span class="token keyword">if</span> server_name<span class="token punctuation">:</span>
            sn_host<span class="token punctuation">,</span> _<span class="token punctuation">,</span> sn_port <span class="token operator">=</span> server_name<span class="token punctuation">.</span>partition<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> host<span class="token punctuation">:</span>
            <span class="token keyword">if</span> sn_host<span class="token punctuation">:</span>
                host <span class="token operator">=</span> sn_host
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                host <span class="token operator">=</span> <span class="token string">&quot;127.0.0.1&quot;</span>
        <span class="token keyword">if</span> port <span class="token keyword">or</span> port <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            port <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span>
        <span class="token keyword">elif</span> sn_port<span class="token punctuation">:</span>
            port <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sn_port<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            port <span class="token operator">=</span> <span class="token number">5000</span>
        options<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token string">&quot;use_reloader&quot;</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>debug<span class="token punctuation">)</span>
        options<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token string">&quot;use_debugger&quot;</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>debug<span class="token punctuation">)</span>
        options<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token string">&quot;threaded&quot;</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
        cli<span class="token punctuation">.</span>show_server_banner<span class="token punctuation">(</span>self<span class="token punctuation">.</span>debug<span class="token punctuation">,</span> self<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
        <span class="token keyword">from</span> werkzeug<span class="token punctuation">.</span>serving <span class="token keyword">import</span> run_simple
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            run_simple<span class="token punctuation">(</span>t<span class="token punctuation">.</span>cast<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">,</span> host<span class="token punctuation">)</span><span class="token punctuation">,</span> port<span class="token punctuation">,</span> self<span class="token punctuation">,</span> <span class="token operator">**</span>options<span class="token punctuation">)</span>
        <span class="token keyword">finally</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>_got_first_request <span class="token operator">=</span> <span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里我们其他的都可以进行忽略只要看以下这个部分就可以了</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> werkzeug<span class="token punctuation">.</span>serving <span class="token keyword">import</span> run_simple

<span class="token keyword">try</span><span class="token punctuation">:</span>
    run_simple<span class="token punctuation">(</span>t<span class="token punctuation">.</span>cast<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">,</span> host<span class="token punctuation">)</span><span class="token punctuation">,</span> port<span class="token punctuation">,</span> self<span class="token punctuation">,</span> <span class="token operator">**</span>options<span class="token punctuation">)</span>
<span class="token keyword">finally</span><span class="token punctuation">:</span>
    self<span class="token punctuation">.</span>_got_first_request <span class="token operator">=</span> <span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个代码表示我们可以利用werkzeug实现一个socket服务</p><p>同样我们可以自己利用werkzeug实现一个简单的web服务</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> werkzeug<span class="token punctuation">.</span>serving <span class="token keyword">import</span> run_simple
<span class="token keyword">from</span> werkzeug<span class="token punctuation">.</span>wrappers <span class="token keyword">import</span> Response


<span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span>environ<span class="token punctuation">,</span> start_response<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;请求来了&#39;</span><span class="token punctuation">)</span>
    response <span class="token operator">=</span> Response<span class="token punctuation">(</span><span class="token string">&#39;你好&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> response<span class="token punctuation">(</span>environ<span class="token punctuation">,</span> start_response<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    run_simple<span class="token punctuation">(</span><span class="token string">&#39;127.0.0.1&#39;</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">,</span> func<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三、总结" tabindex="-1"><a class="header-anchor" href="#三、总结" aria-hidden="true">#</a> 三、总结</h3><p>flask的启动过程大致可以分为以下四步</p><ul><li>初始化Flask对象</li><li>创建resquest处理函数</li><li>定义视图函数并创建路由规则</li><li>利用werkzeug运行服务接受请求</li></ul>`,48),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","2、flask启动过程.html.vue"]]);export{k as default};
