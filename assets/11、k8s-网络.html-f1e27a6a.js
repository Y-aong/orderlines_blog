import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as c,c as o,a as n,b as s,d as a,e as t}from"./app-2d0f66e1.js";const r={},p=t('<h1 id="_11、网络service" tabindex="-1"><a class="header-anchor" href="#_11、网络service" aria-hidden="true">#</a> 11、网络Service</h1><h3 id="一、service" tabindex="-1"><a class="header-anchor" href="#一、service" aria-hidden="true">#</a> 一、service</h3><h4 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h4>',3),u={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/",target:"_blank",rel:"noopener noreferrer"},d=n("p",null,"Service API 是 Kubernetes 的组成部分，它是一种抽象，帮助你通过网络暴露 Pod 组合。 每个 Service 对象定义一个逻辑组的端点（通常这些端点是 Pod）以及如何才能访问这些 Pod 的策略。",-1),k=n("p",null,"Service 定义的抽象能够解耦这种关联。",-1),v={href:"https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/labels/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/#services-without-selectors",target:"_blank",rel:"noopener noreferrer"},h=n("strong",null,"不带",-1),b=t(`<h4 id="service重要字段" tabindex="-1"><a class="header-anchor" href="#service重要字段" aria-hidden="true">#</a> service重要字段</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">FIELDS</span><span class="token punctuation">:</span>
   allocateLoadBalancerNodePorts	&lt;boolean<span class="token punctuation">&gt;</span>
     定义是否自动使用NodePorts，为LoadBalancer类型的服务分配。默认为true

   clusterIP	&lt;string<span class="token punctuation">&gt;</span>
     clusterIP是服务的IP地址，通常会被分配随机。

   clusterIPs	&lt;<span class="token punctuation">[</span><span class="token punctuation">]</span>string<span class="token punctuation">&gt;</span>
    ClusterIPs是分配给该服务的IP地址列表，是通常是随机分配的。

   ports	&lt;<span class="token punctuation">[</span><span class="token punctuation">]</span>Object<span class="token punctuation">&gt;</span>
     服务公开的端口列表
      appProtocol	&lt;string<span class="token punctuation">&gt;</span>该端口的应用协议。
   	  name	&lt;string<span class="token punctuation">&gt;</span> service 名称
  	  nodePort	&lt;integer<span class="token punctuation">&gt;</span> 当type为时，该服务在其上公开的每个节点上的端口NodePort或LoadBalancer。
      port	&lt;integer<span class="token punctuation">&gt;</span> <span class="token punctuation">-</span>required<span class="token punctuation">-</span> 此服务将公开的端口。
      protocol	&lt;string<span class="token punctuation">&gt;</span> 该端口的IP协议。支持“TCP”、“UDP”、“SCTP”。默认的TCP。
      targetPort	&lt;string<span class="token punctuation">&gt;</span>服务所针对的pods上要访问的端口编号或名称。

   selector	&lt;map<span class="token punctuation">[</span>string<span class="token punctuation">]</span>string<span class="token punctuation">&gt;</span>
     将服务流量路由到与此匹配的标签键和值的pod选择器。
     如果为空或不存在，则假定服务具有外部进程管理其端点，Kubernetes不会修改。
	只适用于ClusterIP、NodePort和LoadBalancer类型

   type	&lt;string<span class="token punctuation">&gt;</span>
     ExternalName<span class="token punctuation">,</span> ClusterIP<span class="token punctuation">,</span> NodePort<span class="token punctuation">,</span> and LoadBalancer
     ClusterIP分配一个用于负载均衡的集群内部IP地址port。port由选择器决定
     clusterIP为None，表示没有分配虚拟IP端点被发布为一组port，而不是虚拟IP。
     NodePort构建在ClusterIP上，并在每个节点上分配一个端口路由到与clusterIP相同的端点。
     LoadBalancer”是在此基础上构建的NodePort并创建一个外部负载平衡器(如果当前支持
     ExternalName将此服务别名化为指定的externalName。
     https<span class="token punctuation">:</span>//kubernetes.io/docs/concepts/services<span class="token punctuation">-</span>networking/service/<span class="token comment">#publishing-services-service-types</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="service的创建" tabindex="-1"><a class="header-anchor" href="#service的创建" aria-hidden="true">#</a> service的创建</h4><ul><li><p>yaml文件创建</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>service
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">selector</span><span class="token punctuation">:</span>
    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> MyApp
  <span class="token key atrule">ports</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP
      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>
      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">9376</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="没有选择符的service" tabindex="-1"><a class="header-anchor" href="#没有选择符的service" aria-hidden="true">#</a> 没有选择符的service</h4>`,5),g=n("li",null,"希望在生产环境中使用外部的数据库集群，但测试环境使用自己的数据库。",-1),_={href:"https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/namespaces/",target:"_blank",rel:"noopener noreferrer"},y=n("li",null,"你正在将工作负载迁移到 Kubernetes。在评估该方法时，你仅在 Kubernetes 中运行一部分后端。",-1),f=t(`<h4 id="多端口的service" tabindex="-1"><a class="header-anchor" href="#多端口的service" aria-hidden="true">#</a> 多端口的service</h4><p>对于某些服务，你需要公开多个端口。 Kubernetes 允许你在 Service 对象上配置多个端口定义。 为服务使用多个端口时，必须提供所有端口名称，以使它们无歧义</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>service
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">selector</span><span class="token punctuation">:</span>
    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> MyApp
  <span class="token key atrule">ports</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http
      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP
      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>
      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">9376</span>
    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> https
      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP
      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">443</span>
      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">9377</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="类型服务" tabindex="-1"><a class="header-anchor" href="#类型服务" aria-hidden="true">#</a> 类型服务</h4><h5 id="无头服务" tabindex="-1"><a class="header-anchor" href="#无头服务" aria-hidden="true">#</a> 无头服务</h5><p>有时不需要或不想要负载均衡，以及单独的 Service IP。 遇到这种情况，可以通过指定 Cluster IP（<code>spec.clusterIP</code>）的值为 <code>&quot;None&quot;</code> 来创建 <code>Headless</code> Service。</p><h5 id="发布服务" tabindex="-1"><a class="header-anchor" href="#发布服务" aria-hidden="true">#</a> 发布服务</h5><p>对一些应用的某些部分（如前端），可能希望将其暴露给 Kubernetes 集群外部的 IP 地址。</p><p><code>Type</code> 的取值以及行为如下：</p>`,9),P=n("code",null,"ClusterIP",-1),x=n("code",null,"type",-1),I={href:"https://kubernetes.io/zh-cn/docs/concepts/services-networking/ingress/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://gateway-api.sigs.k8s.io/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/#type-nodeport",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"NodePort",-1),T=n("code",null,"NodePort",-1),C=n("code",null,"type: ClusterIP",-1),B={href:"https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/#loadbalancer",target:"_blank",rel:"noopener noreferrer"},z=n("code",null,"LoadBalancer",-1),L=n("code",null,"NodePort",-1),E=n("code",null,"ClusterIP",-1),K={href:"https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/#externalname",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"ExternalName",-1),A=n("code",null,"CNAME",-1),H=n("code",null,"externalName",-1),R=n("code",null,"foo.bar.example.com",-1),M=t(`<p><strong>nodeport</strong></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>service
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort
  <span class="token key atrule">selector</span><span class="token punctuation">:</span>
    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> MyApp
  <span class="token key atrule">ports</span><span class="token punctuation">:</span>
    <span class="token comment"># 默认情况下，为了方便起见，\`targetPort\` 被设置为与 \`port\` 字段相同的值。</span>
    <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>
      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">80</span>
      <span class="token comment"># 可选字段</span>
      <span class="token comment"># 默认情况下，为了方便起见，Kubernetes 控制平面会从某个范围内分配一个端口号（默认：30000-32767）</span>
      <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">30007</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>LoadBalancer 类型</strong></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>service
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">selector</span><span class="token punctuation">:</span>
    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> MyApp
  <span class="token key atrule">ports</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP
      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>
      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">9376</span>
  <span class="token key atrule">clusterIP</span><span class="token punctuation">:</span> 10.0.171.239
  <span class="token key atrule">type</span><span class="token punctuation">:</span> LoadBalancer
<span class="token key atrule">status</span><span class="token punctuation">:</span>
  <span class="token key atrule">loadBalancer</span><span class="token punctuation">:</span>
    <span class="token key atrule">ingress</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">ip</span><span class="token punctuation">:</span> 192.0.2.127
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二、ingress" tabindex="-1"><a class="header-anchor" href="#二、ingress" aria-hidden="true">#</a> 二、ingress</h3><h4 id="定义-1" tabindex="-1"><a class="header-anchor" href="#定义-1" aria-hidden="true">#</a> 定义</h4><p>Ingress 是对集群中服务的外部访问进行管理的 API 对象，典型的访问方式是 HTTP。Ingress 可以提供负载均衡、SSL 终结和基于名称的虚拟托管。</p>`,7),j={href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#ingress-v1-networking-k8s-io",target:"_blank",rel:"noopener noreferrer"},q={href:"https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/",target:"_blank",rel:"noopener noreferrer"},D=t(`<figure><img src="https://s2.loli.net/2023/04/22/6frZV8HaBp91W7w.png" alt="image-20230401173426576" tabindex="0" loading="lazy"><figcaption>image-20230401173426576</figcaption></figure><h4 id="安装ingress" tabindex="-1"><a class="header-anchor" href="#安装ingress" aria-hidden="true">#</a> 安装ingress</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.47.0/deploy/static/provider/baremetal/deploy.yaml

<span class="token comment">#修改镜像</span>
<span class="token function">vi</span> deploy.yaml
<span class="token comment">#将image的值改为如下值：</span>
registry.cn-hangzhou.aliyuncs.com/lfy_k8s_images/ingress-nginx-controller:v0.46.0

<span class="token comment"># 检查安装的结果</span>
kubectl get pod,svc <span class="token parameter variable">-n</span> ingress-nginx

<span class="token comment"># 最后别忘记把svc暴露的端口要放行</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="ingress资源" tabindex="-1"><a class="header-anchor" href="#ingress资源" aria-hidden="true">#</a> ingress资源</h4><p>每个rules都包含以下规则</p>`,5),U=n("code",null,"host",-1),F={href:"http://foo.bar.com",target:"_blank",rel:"noopener noreferrer"},G=n("code",null,"rules",-1),O=n("code",null,"host",-1),W=n("li",null,[s("路径列表。每个路径都有一个由 "),n("code",null,"service.name"),s(" 和 "),n("code",null,"service.port.name"),s(" 或 "),n("code",null,"service.port.number"),s(" 定义的关联后端。 在负载均衡器将流量定向到引用的服务之前，主机和路径都必须匹配传入请求的内容。")],-1),Z={href:"https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/",target:"_blank",rel:"noopener noreferrer"},J={href:"https://kubernetes.io/zh-cn/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://kubernetes.io/zh-cn/docs/concepts/services-networking/ingress/#resource-backend",target:"_blank",rel:"noopener noreferrer"},X=n("code",null,"host",-1),Y=n("code",null,"path",-1),$=n("code",null,"backend",-1),nn=n("h4",{id:"默认后端",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#默认后端","aria-hidden":"true"},"#"),s(" 默认后端")],-1),sn=n("code",null,".spec.defaultBackend",-1),en=n("code",null,"defaultBackend",-1),an={href:"https://kubernetes.io/zh-cn/docs/concepts/services-networking/ingress-controllers",target:"_blank",rel:"noopener noreferrer"},tn=n("code",null,".spec.rules",-1),ln=n("code",null,".spec.defaultBackend",-1),cn=n("code",null,"defaultBackend",-1),on=t(`<h4 id="资源后端" tabindex="-1"><a class="header-anchor" href="#资源后端" aria-hidden="true">#</a> 资源后端</h4><p><code>Resource</code> 后端是一个引用，指向同一命名空间中的另一个 Kubernetes 资源，将其作为 Ingress 对象。 <code>Resource</code> 后端与 Service 后端是互斥的，在二者均被设置时会无法通过合法性检查。 <code>Resource</code> 后端的一种常见用法是将所有入站数据导向带有静态资产的对象存储后端。</p><h4 id="路径类型" tabindex="-1"><a class="header-anchor" href="#路径类型" aria-hidden="true">#</a> 路径类型</h4><p>Ingress 中的每个路径都需要有对应的路径类型（Path Type）。未明确设置 <code>pathType</code> 的路径无法通过合法性检查。当前支持的路径类型有三种：</p><ul><li><code>ImplementationSpecific</code>：对于这种路径类型，匹配方法取决于 IngressClass。 具体实现可以将其作为单独的 <code>pathType</code> 处理或者与 <code>Prefix</code> 或 <code>Exact</code> 类型作相同处理。</li><li><code>Exact</code>：精确匹配 URL 路径，且区分大小写。</li><li><code>Prefix</code>：基于以 <code>/</code> 分隔的 URL 路径前缀匹配。匹配区分大小写，并且对路径中的元素逐个完成。 路径元素指的是由 <code>/</code> 分隔符分隔的路径中的标签列表。 如果每个 <strong>p</strong> 都是请求路径 <strong>p</strong> 的元素前缀，则请求与路径 <strong>p</strong> 匹配。</li></ul><h4 id="简单示例" tabindex="-1"><a class="header-anchor" href="#简单示例" aria-hidden="true">#</a> 简单示例</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Ingress
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> minimal<span class="token punctuation">-</span>ingress
  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>
    <span class="token key atrule">nginx.ingress.kubernetes.io/rewrite-target</span><span class="token punctuation">:</span> /
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">ingressClassName</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>example
  <span class="token key atrule">rules</span><span class="token punctuation">:</span>
  <span class="token comment"># http 规则</span>
  <span class="token punctuation">-</span> <span class="token key atrule">http</span><span class="token punctuation">:</span>
      <span class="token key atrule">paths</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /testpath
        <span class="token key atrule">pathType</span><span class="token punctuation">:</span> Prefix
        <span class="token key atrule">backend</span><span class="token punctuation">:</span>
          <span class="token key atrule">service</span><span class="token punctuation">:</span>
            <span class="token key atrule">name</span><span class="token punctuation">:</span> test
            <span class="token key atrule">port</span><span class="token punctuation">:</span>
              <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三、calico网络组件" tabindex="-1"><a class="header-anchor" href="#三、calico网络组件" aria-hidden="true">#</a> 三、calico网络组件</h3>`,8);function rn(pn,un){const e=l("ExternalLinkIcon");return c(),o("div",null,[p,n("p",null,[s("Kubernetes 中 Service 是 将运行在一个或一组 "),n("a",u,[s("Pod"),a(e)]),s(" 上的网络应用程序公开为网络服务的方法。")]),d,k,n("p",null,[s("Service 针对的这组 Pod 通常由你定义的"),n("a",v,[s("选择算符"),a(e)]),s("来确定。 若想了解定义 Service 端点的其他方式，可以查阅"),n("a",m,[h,s("选择算符的 Service"),a(e)]),s("。")]),b,n("ul",null,[g,n("li",null,[s("希望服务指向另一个 "),n("a",_,[s("名字空间（Namespace）"),a(e)]),s(" 中或其它集群中的服务。")]),y]),f,n("ul",null,[n("li",null,[P,s("：通过集群的内部 IP 暴露服务，选择该值时服务只能够在集群内部访问。 这也是你没有为服务显式指定 "),x,s(" 时使用的默认值。 你可以使用 "),n("a",I,[s("Ingress"),a(e)]),s(" 或者 "),n("a",w,[s("Gateway API"),a(e)]),s(" 向公众暴露服务。")]),n("li",null,[n("a",N,[S,a(e)]),s("：通过每个节点上的 IP 和静态端口（"),T,s("）暴露服务。 为了让节点端口可用，Kubernetes 设置了集群 IP 地址，这等同于你请求 "),C,s(" 的服务。")]),n("li",null,[n("a",B,[z,a(e)]),s("：使用云提供商的负载均衡器向外部暴露服务。 外部负载均衡器可以将流量路由到自动创建的 "),L,s(" 服务和 "),E,s(" 服务上。")]),n("li",null,[n("a",K,[V,a(e)]),s("：通过返回 "),A,s(" 记录和对应值，可以将服务映射到 "),H,s(" 字段的内容（例如，"),R,s("）。 无需创建任何类型代理。")])]),M,n("p",null,[n("a",j,[s("Ingress"),a(e)]),s(" 公开从集群外部到集群内"),n("a",q,[s("服务"),a(e)]),s("的 HTTP 和 HTTPS 路由。 流量路由由 Ingress 资源上定义的规则控制。")]),D,n("ul",null,[n("li",null,[s("host 可选。提供了 "),U,s("（例如 "),n("a",F,[s("foo.bar.com"),a(e)]),s("），则 "),G,s(" 适用于该 "),O,s("。")]),W,n("li",null,[s("backend。是 "),n("a",Z,[s("Service 文档"),a(e)]),s("中所述的服务和端口名称的组合， 或者是通过 "),n("a",J,[s("CRD"),a(e)]),s(" 方式来实现的"),n("a",Q,[s("自定义资源后端"),a(e)]),s("。 与规则的 "),X,s(" 和 "),Y,s(" 匹配的对 Ingress 的 HTTP（和 HTTPS ）请求将发送到列出的 "),$,s("。")])]),nn,n("p",null,[s("没有设置规则的 Ingress 将所有流量发送到同一个默认后端，而 "),sn,s(" 则是在这种情况下处理请求的那个默认后端。 "),en,s(" 通常是 "),n("a",an,[s("Ingress 控制器"),a(e)]),s("的配置选项， 而非在 Ingress 资源中指定。 如果未设置任何的 "),tn,s("，那么必须指定 "),ln,s("。 如果未设置 "),cn,s("，那么如何处理所有与规则不匹配的流量将交由 Ingress 控制器决定")]),on])}const vn=i(r,[["render",rn],["__file","11、k8s-网络.html.vue"]]);export{vn as default};
