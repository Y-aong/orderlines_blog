import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-2d0f66e1.js";const p={},e=t(`<h1 id="_6、flask-restful-基类展示" tabindex="-1"><a class="header-anchor" href="#_6、flask-restful-基类展示" aria-hidden="true">#</a> 6、flask restful 基类展示</h1><h3 id="一、为什么要抽象基类" tabindex="-1"><a class="header-anchor" href="#一、为什么要抽象基类" aria-hidden="true">#</a> 一、为什么要抽象基类</h3><p>flask 是作为高度自由的框架，因此 flask 的代码可能会写的比较自由，这种自由可能是带有一定风险的，就是 flask 的代码可复用性并不会很高，对于简单单表的增删查改可以参考我的这种方式可以对于单表的操作变得比较简单。</p><p>我在这家工作刚来的时候公司的同事写一个增删改查接口用了将近100行代码，使用这套代码模版后相关代码只有10行内就可以完成一个增删改查的功能。这肯定大大提高了工作效率，我们可以花费更多的精力在更复杂的业务逻辑上。</p><h3 id="二、basemodel" tabindex="-1"><a class="header-anchor" href="#二、basemodel" aria-hidden="true">#</a> 二、BaseModel</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># !/usr/bin/env python</span>
<span class="token comment"># -*-coding:utf-8 -*-</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
# File       : base_model.py
# Time       ：2023/1/10 22:39
# Author     ：Y-aong
# version    ：python 3.7
# Description：base model
&quot;&quot;&quot;</span>
<span class="token keyword">from</span> flask_sqlalchemy <span class="token keyword">import</span> SQLAlchemy <span class="token keyword">as</span> _SQLAlchemy
<span class="token keyword">from</span> sqlalchemy <span class="token keyword">import</span> Column<span class="token punctuation">,</span> SmallInteger
<span class="token keyword">from</span> contextlib <span class="token keyword">import</span> contextmanager

<span class="token keyword">from</span> conf<span class="token punctuation">.</span>config <span class="token keyword">import</span> FlaskConfig
<span class="token keyword">from</span> sqlalchemy <span class="token keyword">import</span> create_engine
<span class="token keyword">from</span> sqlalchemy<span class="token punctuation">.</span>orm <span class="token keyword">import</span> sessionmaker


<span class="token keyword">def</span> <span class="token function">get_filter</span><span class="token punctuation">(</span>table_orm<span class="token punctuation">,</span> filter_data<span class="token punctuation">:</span> <span class="token builtin">dict</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    filters <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> key<span class="token punctuation">,</span> item <span class="token keyword">in</span> filter_data<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>table_orm<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>
            _filter <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>table_orm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">)</span> <span class="token operator">==</span> item
            filters<span class="token punctuation">.</span>append<span class="token punctuation">(</span>_filter<span class="token punctuation">)</span>
    <span class="token keyword">return</span> filters


<span class="token keyword">def</span> <span class="token function">get_session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    db_uri <span class="token operator">=</span> FlaskConfig<span class="token punctuation">.</span>SQLALCHEMY_DATABASE_URI
    engine <span class="token operator">=</span> create_engine<span class="token punctuation">(</span>db_uri<span class="token punctuation">)</span>
    <span class="token keyword">return</span> sessionmaker<span class="token punctuation">(</span>engine<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">SQLAlchemy</span><span class="token punctuation">(</span>_SQLAlchemy<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token decorator annotation punctuation">@contextmanager</span>
    <span class="token keyword">def</span> <span class="token function">auto_commit</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            <span class="token keyword">yield</span>
            self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">raise</span> e


db <span class="token operator">=</span> SQLAlchemy<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">Base</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    __abstract__ <span class="token operator">=</span> <span class="token boolean">True</span>
    <span class="token builtin">id</span> <span class="token operator">=</span> Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>Integer<span class="token punctuation">,</span> primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> autoincrement<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    active <span class="token operator">=</span> Column<span class="token punctuation">(</span>SmallInteger<span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">set_attrs</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> attrs_dict<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> attrs_dict<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token keyword">and</span> key <span class="token operator">!=</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span>
                <span class="token builtin">setattr</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">delete</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token keyword">def</span> <span class="token function">__getitem__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三、base-view-基类" tabindex="-1"><a class="header-anchor" href="#三、base-view-基类" aria-hidden="true">#</a> 三、base view 基类</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># !/usr/bin/env python</span>
<span class="token comment"># -*-coding:utf-8 -*-</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
# File       : base_view.py
# Time       ：2023/3/12 13:10
# Author     ：Y-aong
# version    ：python 3.7
# Description：flask视图基类
&quot;&quot;&quot;</span>
<span class="token keyword">from</span> flask <span class="token keyword">import</span> request
<span class="token keyword">from</span> flask_restful <span class="token keyword">import</span> Resource

<span class="token keyword">from</span> conf<span class="token punctuation">.</span>config <span class="token keyword">import</span> FlaskConfig
<span class="token keyword">from</span> <span class="token punctuation">.</span>api_handle_exception <span class="token keyword">import</span> handle_api_error
<span class="token keyword">from</span> <span class="token punctuation">.</span>base_model <span class="token keyword">import</span> db
<span class="token keyword">from</span> <span class="token punctuation">.</span>base_response <span class="token keyword">import</span> generate_response


<span class="token keyword">class</span> <span class="token class-name">BaseView</span><span class="token punctuation">(</span>Resource<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>table_orm <span class="token operator">=</span> <span class="token boolean">None</span>
        self<span class="token punctuation">.</span>table_schema <span class="token operator">=</span> <span class="token boolean">None</span>
        <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>form_data<span class="token punctuation">:</span> <span class="token builtin">dict</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>args
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>form_data<span class="token punctuation">:</span> <span class="token builtin">dict</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>json
        self<span class="token punctuation">.</span>_filter <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>table_id <span class="token operator">=</span> self<span class="token punctuation">.</span>form_data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>response_data <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>page <span class="token operator">=</span> FlaskConfig<span class="token punctuation">.</span>PAGE
        self<span class="token punctuation">.</span>pre_page <span class="token operator">=</span> FlaskConfig<span class="token punctuation">.</span>PRE_PAGE

    <span class="token keyword">def</span> <span class="token function">handle_filter</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>table_orm<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>_filter<span class="token punctuation">.</span>append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>table_orm<span class="token punctuation">.</span>active <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> self<span class="token punctuation">.</span>form_data<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>table_orm<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>_filter<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">getattr</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>table_orm<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">==</span> value<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">handle_request_params</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;处理请求参数&quot;&quot;&quot;</span>
        <span class="token keyword">pass</span>

    <span class="token keyword">def</span> <span class="token function">handle_response_data</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;处理返回值参数&quot;&quot;&quot;</span>
        <span class="token keyword">pass</span>

    <span class="token keyword">def</span> <span class="token function">response_callback</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;处理response的其他后续操作&quot;&quot;&quot;</span>
        <span class="token keyword">pass</span>

    <span class="token keyword">def</span> <span class="token function">_get_single</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;单条查询&quot;&quot;&quot;</span>
        single_data <span class="token operator">=</span> db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>query<span class="token punctuation">(</span>self<span class="token punctuation">.</span>table_orm<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token operator">*</span>self<span class="token punctuation">.</span>_filter<span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> single_data<span class="token punctuation">:</span>
            <span class="token keyword">return</span> self<span class="token punctuation">.</span>table_schema<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>dump<span class="token punctuation">(</span>single_data<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">def</span> <span class="token function">_get_multi</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;多条查询&quot;&quot;&quot;</span>
        multi_data <span class="token operator">=</span> db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>query<span class="token punctuation">(</span>self<span class="token punctuation">.</span>table_orm<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token operator">*</span>self<span class="token punctuation">.</span>_filter<span class="token punctuation">)</span><span class="token punctuation">.</span>order_by<span class="token punctuation">(</span>
            self<span class="token punctuation">.</span>table_orm<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>paginate<span class="token punctuation">(</span>page<span class="token operator">=</span>self<span class="token punctuation">.</span>page<span class="token punctuation">,</span> per_page<span class="token operator">=</span>self<span class="token punctuation">.</span>pre_page<span class="token punctuation">)</span>
        items <span class="token operator">=</span> self<span class="token punctuation">.</span>table_schema<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>dump<span class="token punctuation">(</span>multi_data<span class="token punctuation">.</span>items<span class="token punctuation">,</span> many<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        total <span class="token operator">=</span> multi_data<span class="token punctuation">.</span>total
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&#39;items&#39;</span><span class="token punctuation">:</span> items<span class="token punctuation">,</span> <span class="token string">&#39;total&#39;</span><span class="token punctuation">:</span> total<span class="token punctuation">}</span>

    <span class="token decorator annotation punctuation">@handle_api_error</span>
    <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 获取全部</span>
        self<span class="token punctuation">.</span>handle_filter<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>form_data <span class="token keyword">or</span> self<span class="token punctuation">.</span>form_data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;pre_page&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            data <span class="token operator">=</span> self<span class="token punctuation">.</span>_get_multi<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            data <span class="token operator">=</span> self<span class="token punctuation">.</span>_get_single<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> generate_response<span class="token punctuation">(</span>data<span class="token punctuation">)</span>

    <span class="token decorator annotation punctuation">@handle_api_error</span>
    <span class="token keyword">def</span> <span class="token function">post</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>handle_request_params<span class="token punctuation">(</span><span class="token punctuation">)</span>
        form_data <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> self<span class="token punctuation">.</span>form_data<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>table_orm<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>
                form_data<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
        task <span class="token operator">=</span> self<span class="token punctuation">.</span>table_schema<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>load<span class="token punctuation">(</span>form_data<span class="token punctuation">)</span>
        <span class="token keyword">with</span> db<span class="token punctuation">.</span>auto_commit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            obj <span class="token operator">=</span> self<span class="token punctuation">.</span>table_orm<span class="token punctuation">(</span><span class="token operator">**</span>task<span class="token punctuation">)</span>
            db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>add<span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>response_data<span class="token punctuation">[</span><span class="token string">&#39;table_id&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token builtin">id</span>
        self<span class="token punctuation">.</span>table_id <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token builtin">id</span>
        self<span class="token punctuation">.</span>handle_response_data<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>response_callback<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> generate_response<span class="token punctuation">(</span>message<span class="token operator">=</span><span class="token string">&#39;创建成功&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>self<span class="token punctuation">.</span>response_data<span class="token punctuation">)</span>

    <span class="token decorator annotation punctuation">@handle_api_error</span>
    <span class="token keyword">def</span> <span class="token function">put</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>handle_request_params<span class="token punctuation">(</span><span class="token punctuation">)</span>
        obj <span class="token operator">=</span> db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>query<span class="token punctuation">(</span>self<span class="token punctuation">.</span>table_orm<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>table_orm<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token operator">==</span> self<span class="token punctuation">.</span>table_id<span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>
        form_data <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> self<span class="token punctuation">.</span>form_data<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>table_orm<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>
                form_data<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
        info <span class="token operator">=</span> self<span class="token punctuation">.</span>table_schema<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>load<span class="token punctuation">(</span>form_data<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> obj<span class="token punctuation">:</span>
            <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;根据table_id:</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>table_id<span class="token punctuation">}</span></span><span class="token string">找不到记录&#39;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">with</span> db<span class="token punctuation">.</span>auto_commit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>query<span class="token punctuation">(</span>self<span class="token punctuation">.</span>table_orm<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>table_orm<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token operator">==</span> self<span class="token punctuation">.</span>table_id<span class="token punctuation">)</span><span class="token punctuation">.</span>update<span class="token punctuation">(</span>info<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>response_data<span class="token punctuation">[</span><span class="token string">&#39;table_id&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token builtin">id</span>
        self<span class="token punctuation">.</span>handle_response_data<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>response_callback<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> generate_response<span class="token punctuation">(</span>message<span class="token operator">=</span><span class="token string">&#39;修改成功&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>self<span class="token punctuation">.</span>response_data<span class="token punctuation">)</span>

    <span class="token decorator annotation punctuation">@handle_api_error</span>
    <span class="token keyword">def</span> <span class="token function">delete</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>handle_request_params<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">with</span> db<span class="token punctuation">.</span>auto_commit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>table_orm<span class="token punctuation">,</span> <span class="token string">&#39;active&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>query<span class="token punctuation">(</span>self<span class="token punctuation">.</span>table_orm<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>table_orm<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token operator">==</span> self<span class="token punctuation">.</span>table_id<span class="token punctuation">)</span><span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;active&#39;</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>query<span class="token punctuation">(</span>self<span class="token punctuation">.</span>table_orm<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>table_orm<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token operator">==</span> self<span class="token punctuation">.</span>table_id<span class="token punctuation">)</span><span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>response_data<span class="token punctuation">[</span><span class="token string">&#39;table_id&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>table_id
        self<span class="token punctuation">.</span>response_callback<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> generate_response<span class="token punctuation">(</span>message<span class="token operator">=</span><span class="token string">&#39;删除成功&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>self<span class="token punctuation">.</span>response_data<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="四、response-基类" tabindex="-1"><a class="header-anchor" href="#四、response-基类" aria-hidden="true">#</a> 四、response 基类</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># !/usr/bin/env python</span>
<span class="token comment"># -*-coding:utf-8 -*-</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
# File       : base_response.py
# Time       ：2023/3/12 10:44
# Author     ：Y-aong
# version    ：python 3.7
# Description：response基类
&quot;&quot;&quot;</span>

<span class="token keyword">from</span> flask <span class="token keyword">import</span> jsonify<span class="token punctuation">,</span> abort


<span class="token keyword">def</span> <span class="token function">generate_response</span><span class="token punctuation">(</span>data<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> code<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span> message<span class="token operator">=</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    自定义响应
    :param code:状态码
    :param data:返回数据
    :param message:返回消息
    :return:
    &quot;&quot;&quot;</span>
    success <span class="token operator">=</span> <span class="token boolean">True</span> <span class="token keyword">if</span> code <span class="token operator">==</span> <span class="token number">200</span> <span class="token keyword">else</span> <span class="token boolean">False</span>
    res <span class="token operator">=</span> jsonify<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span>code<span class="token operator">=</span>code<span class="token punctuation">,</span> success<span class="token operator">=</span>success<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> message<span class="token operator">=</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span>
    res<span class="token punctuation">.</span>status_code <span class="token operator">=</span> <span class="token number">200</span>
    <span class="token keyword">return</span> res


<span class="token keyword">def</span> <span class="token function">generate_abort</span><span class="token punctuation">(</span>code<span class="token operator">=</span><span class="token number">401</span><span class="token punctuation">,</span> success<span class="token operator">=</span><span class="token string">&#39;failure&#39;</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    kwargs<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> success<span class="token punctuation">)</span>
    kwargs<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token string">&#39;code&#39;</span><span class="token punctuation">,</span> code<span class="token punctuation">)</span>
    <span class="token keyword">return</span> abort<span class="token punctuation">(</span>code<span class="token punctuation">,</span> kwargs<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="五、基本使用" tabindex="-1"><a class="header-anchor" href="#五、基本使用" aria-hidden="true">#</a> 五、基本使用</h3><h4 id="_1、创建模型类" tabindex="-1"><a class="header-anchor" href="#_1、创建模型类" aria-hidden="true">#</a> 1、创建模型类</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> public<span class="token punctuation">.</span>base_model <span class="token keyword">import</span> db<span class="token punctuation">,</span> Base


<span class="token keyword">class</span> <span class="token class-name">Teacher</span><span class="token punctuation">(</span>Base<span class="token punctuation">)</span><span class="token punctuation">:</span>
    __tablename__ <span class="token operator">=</span> <span class="token string">&#39;test_teacher&#39;</span>
    name <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>String<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span> comment<span class="token operator">=</span><span class="token string">&#39;教师名称&#39;</span><span class="token punctuation">)</span>
    sex <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>String<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span> comment<span class="token operator">=</span><span class="token string">&#39;性别&#39;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2、创建序列化类" tabindex="-1"><a class="header-anchor" href="#_2、创建序列化类" aria-hidden="true">#</a> 2、创建序列化类</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">TeacherSchema</span><span class="token punctuation">(</span>SQLAlchemyAutoSchema<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>
        model <span class="token operator">=</span> Teacher

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、视图类" tabindex="-1"><a class="header-anchor" href="#_3、视图类" aria-hidden="true">#</a> 3、视图类</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">TeacherView</span><span class="token punctuation">(</span>BaseView<span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> <span class="token string">&#39;/teacher&#39;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>TeacherView<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>table_orm <span class="token operator">=</span> Teacher
        self<span class="token punctuation">.</span>table_schema <span class="token operator">=</span> TeacherSchema
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就完成了 teacher 表的增删查改，是不是比较简单</p>`,18),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","6、flask_restful基类示例.html.vue"]]);export{r as default};
