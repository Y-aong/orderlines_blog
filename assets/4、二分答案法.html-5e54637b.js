import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as p,c as i,a as n,b as s,d as e,e as l}from"./app-2d0f66e1.js";const c={},u=n("h1",{id:"_4、二分答案法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_4、二分答案法","aria-hidden":"true"},"#"),s(" 4、二分答案法")],-1),r={id:"_275-h-指数-ii",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#_275-h-指数-ii","aria-hidden":"true"},"#",-1),k={href:"https://leetcode.cn/problems/h-index-ii/",target:"_blank",rel:"noopener noreferrer"},m=n("p",null,[s("给你一个整数数组 "),n("code",null,"citations"),s(" ，其中 "),n("code",null,"citations[i]"),s(" 表示研究者的第 "),n("code",null,"i"),s(" 篇论文被引用的次数，"),n("code",null,"citations"),s(" 已经按照 "),n("strong",null,"升序排列"),s(" 。计算并返回该研究者的 h 指数。")],-1),v={href:"https://baike.baidu.com/item/h-index/3991452?fr=aladdin",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"h",-1),h=n("code",null,"n",-1),g=n("strong",null,"至少",-1),_=n("code",null,"h",-1),f=n("strong",null,"至少",-1),x=n("code",null,"h",-1),y=l(`<p>请你设计并实现对数时间复杂度的算法解决此问题。</p><p><strong>示例 1：</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：citations = [0,1,3,5,6]
输出：3
解释：给定数组表示研究者总共有 5 篇论文，每篇论文相应的被引用了 0, 1, 3, 5, 6 次。
     由于研究者有3篇论文每篇 至少 被引用了 3 次，其余两篇论文每篇被引用 不多于 3 次，所以她的 h 指数是 3 。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：citations = [1,2,100]
输出：2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p><ul><li><code>n == citations.length</code></li><li><code>1 &lt;= n &lt;= 105</code></li><li><code>0 &lt;= citations[i] &lt;= 1000</code></li><li><code>citations</code> 按 <strong>升序排列</strong></li></ul><p>我对于这个题意总是不太明白，对于很多题解所以也不明白</p><p>我们要抓住这句话（<code>n</code> 篇论文中）<strong>至少</strong> 有 <code>h</code> 篇论文分别被引用了<strong>至少</strong> <code>h</code> 次。</p><p>如果直接暴力遍历的话代码如下</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">hIndex</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> citations<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>
        count <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>citations<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> citations<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> count<span class="token punctuation">:</span>
                count <span class="token operator">+=</span> <span class="token number">1</span>
        <span class="token keyword">return</span> count

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是这样不满足对数时间复杂度</p><p>所以想到了二分算法</p><p>二分算法的前提是数据有序，也是正好用到了数据的有序性</p><p>我总结下来二分算法需要问自己以下几个问题</p><ul><li>我们求的是什么。</li><li>开区间还是闭区间</li><li>left,middle,right代表什么</li></ul><p><strong>回答</strong></p><ul><li><p>我们要求的是什么：论文数量。（n 篇论文中）至少 有 h 篇论文分别被引用了至少 h 次。可以使用索引来求出</p><ul><li>使用开区间还是闭区间，开区间</li><li>left, right， middle分别指的是什么 <ul><li>left:left篇论文至少被引用left次，就是答案</li><li>middle:我们需要判断的答案(论文数量)</li><li>right:一定不是答案</li></ul></li></ul></li><li><p>left,right在循环中会不会意义改变</p></li></ul><p>其实只要回答以上几个问题代码也就随即出来了</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">hIndex1</span><span class="token punctuation">(</span>citations<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    1、我们要求的是什么：论文数量。（n 篇论文中）至少 有 h 篇论文分别被引用了至少 h 次。可以使用索引来求出
    2、使用开区间还是闭区间，开区间
    3、left, right， middle分别指的是什么
        left:left篇论文至少被引用left次，就是答案
        middle:我们需要判断的答案(论文数量)
        right:一定不是答案
    &quot;&quot;&quot;</span>
    left <span class="token operator">=</span> <span class="token number">0</span>
    right <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>citations<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token keyword">while</span> left <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> right<span class="token punctuation">:</span>
        middle <span class="token operator">=</span> <span class="token punctuation">(</span>left <span class="token operator">+</span> right<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>  <span class="token comment"># 指的是论文数量</span>
        <span class="token comment"># 这里指的是从右到左寻找，当前citations[-middle]引用次数大于它的论文数量</span>
        <span class="token keyword">if</span> citations<span class="token punctuation">[</span><span class="token operator">-</span>middle<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> middle<span class="token punctuation">:</span>
            left <span class="token operator">=</span> middle
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            right <span class="token operator">=</span> middle
    <span class="token keyword">return</span> left


<span class="token keyword">print</span><span class="token punctuation">(</span>hIndex1<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>hIndex1<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20);function w(I,q){const a=o("ExternalLinkIcon");return p(),i("div",null,[u,n("h3",r,[d,s(),n("a",k,[s("275. H 指数 II"),e(a)])]),m,n("p",null,[n("a",v,[s("h 指数的定义"),e(a)]),s("：h 代表“高引用次数”（high citations），一名科研人员的 "),b,s(" 指数是指他（她）的 （"),h,s(" 篇论文中）"),g,s(" 有 "),_,s(" 篇论文分别被引用了"),f,s(),x,s(" 次。")]),y])}const V=t(c,[["render",w],["__file","4、二分答案法.html.vue"]]);export{V as default};
