import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-2d0f66e1.js";const e={},p=t(`<h1 id="robot中访问者模式" tabindex="-1"><a class="header-anchor" href="#robot中访问者模式" aria-hidden="true">#</a> robot中访问者模式</h1><h3 id="一、访问者模式" tabindex="-1"><a class="header-anchor" href="#一、访问者模式" aria-hidden="true">#</a> 一、访问者模式</h3><p>在看<code>robotframework</code>源码中总是发现有<code>visit</code>这个单词，而且在整个运行中都是反复出现，所以自己就看了下关于这个访问者的设计模式。其实这个设计模式是非常少见的，我们平时使用中也并不常见，但是既然robot中出现了这个我们就来看一下这个设计模式。因为懂了这个设计模式也会更加方便我们看源码。</p><p><strong>访问者模式（Visitor Pattern）是一种行为型设计模式</strong>，它能够将<strong>算法与对象结构分离，使得算法可以独立于对象结构而变化</strong>。<br> 该模式的核心概念是，定义一个访问者对象，它是对某个对象结构中各个元素的操作，这种操作可以改变元素的类或状态。<br> 其工作原理是，访问者模式通过定义访问者接口和被访问者接口，将遍历和操作分离开来，从而提高代码的可维护性和可扩展性。</p><h4 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景" aria-hidden="true">#</a> 应用场景：</h4><p>1、需要对复杂的对象结构进行遍历，并对其中的元素进行不同的操作。<br> 2、需要对对象结构中的不同元素进行不同的操作，例如对不同类型的节点进行不同的访问。</p><h4 id="主要步骤" tabindex="-1"><a class="header-anchor" href="#主要步骤" aria-hidden="true">#</a> 主要步骤：</h4><p>1、定义访问者接口，包含对不同类型元素的不同访问方法。<br> 2、定义被访问者接口，包含接受访问者访问的方法，这个方法会调用访问者对当前对象进行访问。</p><h3 id="二、定义访问者" tabindex="-1"><a class="header-anchor" href="#二、定义访问者" aria-hidden="true">#</a> 二、定义访问者</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 定义访问者接口</span>
<span class="token keyword">class</span> <span class="token class-name">SalaryVisitor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">visit_fullltime</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 全职员工</span>
        <span class="token keyword">pass</span>

    <span class="token keyword">def</span> <span class="token function">visit_parttime</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 兼职员工</span>
        <span class="token keyword">pass</span>


<span class="token comment"># 定义被访问者接口</span>
<span class="token keyword">class</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">accept</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> visitor<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 接受访问</span>
        <span class="token keyword">pass</span>


<span class="token keyword">class</span> <span class="token class-name">FulltimeEmployee</span><span class="token punctuation">(</span>Employee<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> base_salary<span class="token punctuation">,</span> bonus<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 全职员工：基本工资、奖金</span>
        self<span class="token punctuation">.</span>base_salary <span class="token operator">=</span> base_salary
        self<span class="token punctuation">.</span>bonus <span class="token operator">=</span> bonus

    <span class="token keyword">def</span> <span class="token function">accept</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> visitor<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> visitor<span class="token punctuation">.</span>visit_fullltime<span class="token punctuation">(</span>self<span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">ParttimeEmployee</span><span class="token punctuation">(</span>Employee<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> hourly_wage<span class="token punctuation">,</span> total_hours<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 兼职员工：时薪，小时</span>
        self<span class="token punctuation">.</span>hourly_wage <span class="token operator">=</span> hourly_wage
        self<span class="token punctuation">.</span>total_hours <span class="token operator">=</span> total_hours

    <span class="token keyword">def</span> <span class="token function">accept</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> visitor<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> visitor<span class="token punctuation">.</span>visit_parttime<span class="token punctuation">(</span>self<span class="token punctuation">)</span>


<span class="token comment"># 定义具体的访问者类</span>
<span class="token keyword">class</span> <span class="token class-name">TaxSalaryVisitor</span><span class="token punctuation">(</span>SalaryVisitor<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">visit_fullltime</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> fulltime_employee<span class="token punctuation">)</span><span class="token punctuation">:</span>
        tax <span class="token operator">=</span> <span class="token punctuation">(</span>fulltime_employee<span class="token punctuation">.</span>base_salary <span class="token operator">+</span> fulltime_employee<span class="token punctuation">.</span>bonus<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.1</span>
        <span class="token keyword">return</span> tax

    <span class="token keyword">def</span> <span class="token function">visit_parttime</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parttime_employee<span class="token punctuation">)</span><span class="token punctuation">:</span>
        tax <span class="token operator">=</span> parttime_employee<span class="token punctuation">.</span>hourly_wage <span class="token operator">*</span> parttime_employee<span class="token punctuation">.</span>total_hours <span class="token operator">*</span> <span class="token number">0.1</span>
        <span class="token keyword">return</span> tax


<span class="token keyword">class</span> <span class="token class-name">BonusSalaryVisitor</span><span class="token punctuation">(</span>SalaryVisitor<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">visit_fullltime</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> fulltime_employee<span class="token punctuation">)</span><span class="token punctuation">:</span>
        bonus <span class="token operator">=</span> fulltime_employee<span class="token punctuation">.</span>bonus
        <span class="token keyword">return</span> bonus

    <span class="token keyword">def</span> <span class="token function">visit_parttime</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parttime_employee<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token number">0</span>


<span class="token comment"># 创建实例</span>
fulltime_employee <span class="token operator">=</span> FulltimeEmployee<span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span>
parttime_employee <span class="token operator">=</span> ParttimeEmployee<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">)</span>

tax_visitor <span class="token operator">=</span> TaxSalaryVisitor<span class="token punctuation">(</span><span class="token punctuation">)</span>
bonus_visitor <span class="token operator">=</span> BonusSalaryVisitor<span class="token punctuation">(</span><span class="token punctuation">)</span>

full_tax <span class="token operator">=</span> fulltime_employee<span class="token punctuation">.</span>accept<span class="token punctuation">(</span>tax_visitor<span class="token punctuation">)</span>
full_bonus <span class="token operator">=</span> fulltime_employee<span class="token punctuation">.</span>accept<span class="token punctuation">(</span>bonus_visitor<span class="token punctuation">)</span>

part_tax <span class="token operator">=</span> parttime_employee<span class="token punctuation">.</span>accept<span class="token punctuation">(</span>tax_visitor<span class="token punctuation">)</span>
part_bonus <span class="token operator">=</span> parttime_employee<span class="token punctuation">.</span>accept<span class="token punctuation">(</span>bonus_visitor<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;全职员工：税：</span><span class="token interpolation"><span class="token punctuation">{</span>full_tax<span class="token punctuation">}</span></span><span class="token string">,  奖金：</span><span class="token interpolation"><span class="token punctuation">{</span>full_bonus<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;兼职员工：税：</span><span class="token interpolation"><span class="token punctuation">{</span>part_tax<span class="token punctuation">}</span></span><span class="token string">,  奖金：</span><span class="token interpolation"><span class="token punctuation">{</span>part_bonus<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回值</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 全职员工：税：1500.0,  奖金：5000
# 兼职员工：税：800.0,  奖金：0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这个就是一个简单的访问者的示例。</p><h3 id="三、robot如何使用访问者模式" tabindex="-1"><a class="header-anchor" href="#三、robot如何使用访问者模式" aria-hidden="true">#</a> 三、robot如何使用访问者模式</h3><h4 id="访问者" tabindex="-1"><a class="header-anchor" href="#访问者" aria-hidden="true">#</a> 访问者</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">SuiteVisitor</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">visit_suite</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> suite<span class="token punctuation">:</span> <span class="token string">&#39;TestSuite&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>start_suite<span class="token punctuation">(</span>suite<span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">False</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> suite<span class="token punctuation">.</span>has_setup<span class="token punctuation">:</span>
                suite<span class="token punctuation">.</span>setup<span class="token punctuation">.</span>visit<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
            suite<span class="token punctuation">.</span>suites<span class="token punctuation">.</span>visit<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
            suite<span class="token punctuation">.</span>tests<span class="token punctuation">.</span>visit<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
            <span class="token keyword">if</span> suite<span class="token punctuation">.</span>has_teardown<span class="token punctuation">:</span>
                suite<span class="token punctuation">.</span>teardown<span class="token punctuation">.</span>visit<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>end_suite<span class="token punctuation">(</span>suite<span class="token punctuation">)</span>
            
    <span class="token keyword">def</span> <span class="token function">visit_keyword</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> keyword<span class="token punctuation">:</span> <span class="token string">&#39;Keyword&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>start_keyword<span class="token punctuation">(</span>keyword<span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">False</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>_possible_setup<span class="token punctuation">(</span>keyword<span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>_possible_body<span class="token punctuation">(</span>keyword<span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>_possible_teardown<span class="token punctuation">(</span>keyword<span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>end_keyword<span class="token punctuation">(</span>keyword<span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">visit_return</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> return_<span class="token punctuation">:</span> <span class="token string">&#39;Return&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>start_return<span class="token punctuation">(</span>return_<span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">False</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>_possible_body<span class="token punctuation">(</span>return_<span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>end_return<span class="token punctuation">(</span>return_<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="被访问者" tabindex="-1"><a class="header-anchor" href="#被访问者" aria-hidden="true">#</a> 被访问者</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">TestSuite</span><span class="token punctuation">(</span>ModelObject<span class="token punctuation">,</span> Generic<span class="token punctuation">[</span>KW<span class="token punctuation">,</span> TC<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">visit</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> visitor<span class="token punctuation">:</span> SuiteVisitor<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;:mod:\`Visitor interface &lt;robot.model.visitor&gt;\` entry-point.&quot;&quot;&quot;</span>
        visitor<span class="token punctuation">.</span>visit_suite<span class="token punctuation">(</span>self<span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">Keyword</span><span class="token punctuation">(</span>BodyItem<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">visit</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> visitor<span class="token punctuation">:</span> <span class="token string">&#39;SuiteVisitor&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;:mod:\`Visitor interface &lt;robot.model.visitor&gt;\` entry-point.&quot;&quot;&quot;</span>
        <span class="token keyword">if</span> self<span class="token punctuation">:</span>
            visitor<span class="token punctuation">.</span>visit_keyword<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
            
<span class="token keyword">class</span> <span class="token class-name">Return</span><span class="token punctuation">(</span>BodyItem<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">visit</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> visitor<span class="token punctuation">:</span> SuiteVisitor<span class="token punctuation">)</span><span class="token punctuation">:</span>
        visitor<span class="token punctuation">.</span>visit_return<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),o=[p];function i(c,l){return s(),a("div",null,o)}const k=n(e,[["render",i],["__file","1、访问者模式.html.vue"]]);export{k as default};
