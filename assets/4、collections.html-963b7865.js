const n=JSON.parse(`{"key":"v-ab35ebac","path":"/posts/Python/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/4%E3%80%81collections.html","title":"4、内置模块collections","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2023-07-15T00:00:00.000Z","category":["python"],"tag":["collections"],"description":"4、内置模块collections 一、Counter--统计对象的个数 Counter类可以统计对象的个数， 它是字典的子类, 它有3种创建方法, 它支持访问缺失键, 更新计数器, 返回top N数据, 算术和集合操作，下面讲解Counter类的用法 1. 创建 Counter有3种创建对象的方法 from collections import Counter c1 = Counter() # 创建一个空的Counter对象 c2 = Counter('hello world') # 从一个可迭代对象(列表,元组,字典,字符串)创建 c3 = Counter(a=3, b=4) # 从一组键值对创建 print(c2) print(c3)","head":[["meta",{"property":"og:url","content":"https://y-aong.github.io/orderlines_blog/orderlines_blog/posts/Python/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/4%E3%80%81collections.html"}],["meta",{"property":"og:site_name","content":"ORDERLINES"}],["meta",{"property":"og:title","content":"4、内置模块collections"}],["meta",{"property":"og:description","content":"4、内置模块collections 一、Counter--统计对象的个数 Counter类可以统计对象的个数， 它是字典的子类, 它有3种创建方法, 它支持访问缺失键, 更新计数器, 返回top N数据, 算术和集合操作，下面讲解Counter类的用法 1. 创建 Counter有3种创建对象的方法 from collections import Counter c1 = Counter() # 创建一个空的Counter对象 c2 = Counter('hello world') # 从一个可迭代对象(列表,元组,字典,字符串)创建 c3 = Counter(a=3, b=4) # 从一组键值对创建 print(c2) print(c3)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Y-aong"}],["meta",{"property":"article:tag","content":"collections"}],["meta",{"property":"article:published_time","content":"2023-07-15T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4、内置模块collections\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-15T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Y-aong\\",\\"url\\":\\"https://github.com/Y-aong\\"}]}"]]},"headers":[{"level":3,"title":"一、Counter--统计对象的个数","slug":"一、counter-统计对象的个数","link":"#一、counter-统计对象的个数","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.52,"words":755},"filePathRelative":"posts/Python/基础知识/4、collections.md","localizedDate":"July 15, 2023","excerpt":"<h1> 4、内置模块collections</h1>\\n<h3> 一、Counter--统计对象的个数</h3>\\n<p>Counter类可以统计对象的个数， 它是字典的子类, 它有3种创建方法, 它支持访问缺失键, 更新计数器, 返回top N数据, 算术和集合操作，下面讲解Counter类的用法</p>\\n<h4> 1. 创建</h4>\\n<p>Counter有3种创建对象的方法</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">from</span> collections <span class=\\"token keyword\\">import</span> Counter\\n\\nc1 <span class=\\"token operator\\">=</span> Counter<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>      <span class=\\"token comment\\"># 创建一个空的Counter对象</span>\\nc2 <span class=\\"token operator\\">=</span> Counter<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'hello world'</span><span class=\\"token punctuation\\">)</span>      <span class=\\"token comment\\"># 从一个可迭代对象(列表,元组,字典,字符串)创建</span>\\nc3 <span class=\\"token operator\\">=</span> Counter<span class=\\"token punctuation\\">(</span>a<span class=\\"token operator\\">=</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> b<span class=\\"token operator\\">=</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">)</span>      <span class=\\"token comment\\"># 从一组键值对创建</span>\\n\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>c2<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>c3<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
