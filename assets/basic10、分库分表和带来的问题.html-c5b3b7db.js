import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as l,e}from"./app-2d0f66e1.js";const n={},t=e('<h1 id="_10、分库分表和带来的问题" tabindex="-1"><a class="header-anchor" href="#_10、分库分表和带来的问题" aria-hidden="true">#</a> 10、分库分表和带来的问题</h1><h3 id="一、什么是分库分表" tabindex="-1"><a class="header-anchor" href="#一、什么是分库分表" aria-hidden="true">#</a> 一、什么是分库分表</h3><p>简单来说，就是指通过某种特定的条件，将我们存放在同一个数据库中的数据分散存放到多个数据库（主机）上面，以达到分散单台设备负载的效果。</p><figure><img src="https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/16657/1597204636882698240/351672652c6a4a1bb6e648f75651d730.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><ul><li><p>分库分表解决的问题</p><p><strong>分库分表的目的是为了解决由于数据量过大而导致数据库性能降低的问题，将原来单体服务的数据库进行拆分.将数据大表拆分成若干数据表组成，使得单一数据库、单一数据表的数据量变小，从而达到提升数据库性能的目的。</strong></p></li><li><p>什么情况下需要分库分表</p><ul><li><strong>单机存储容量遇到瓶颈.</strong></li><li><strong>连接数,处理能力达到上限.</strong></li></ul></li></ul><blockquote><p>注意:</p><p>分库分表之前,要根据项目的实际情况 确定我们的数据量是不是够大,并发量是不是够大,来决定是否分库分表.</p><p>数据量不够就不要分表,单表数据量超过1000万或100G的时候, 速度就会变慢(官方测试),</p></blockquote><p><strong>分库分表包括： 垂直分库、垂直分表、水平分库、水平分表 四种方式。</strong></p><h3 id="二、垂直分库" tabindex="-1"><a class="header-anchor" href="#二、垂直分库" aria-hidden="true">#</a> 二、垂直分库</h3><ul><li><p>数据库中不同的表对应着不同的业务，垂直切分是指按照业务的不同将表进行分类,分布到不同的数据库上面</p><ul><li>将数据库部署在不同服务器上，从而达到多个服务器共同分摊压力的效果</li></ul><figure><img src="https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/16657/1597204636882698240/dcbbe3674442421c967fe8541f28b6b0.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure></li></ul><h3 id="三、垂直分表" tabindex="-1"><a class="header-anchor" href="#三、垂直分表" aria-hidden="true">#</a> 三、垂直分表</h3><p>表中字段太多且包含大字段的时候，在查询时对数据库的IO、内存会受到影响，同时更新数据时，产生的binlog文件会很大，MySQL在主从同步时也会有延迟的风险</p><ul><li>将一个表按照字段分成多表，每个表存储其中一部分字段。</li><li>对职位表进行垂直拆分, 将职位基本信息放在一张表, 将职位描述信息存放在另一张表</li></ul><figure><img src="https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/16657/1597204636882698240/d401ca741da24ac782d6356a38e20311.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><ul><li>垂直拆分带来的一些提升 <ul><li>解决业务层面的耦合，业务清晰</li><li>能对不同业务的数据进行分级管理、维护、监控、扩展等</li><li>高并发场景下，垂直分库一定程度的提高访问性能</li></ul></li><li>垂直拆分没有彻底解决单表数据量过大的问题</li></ul><h3 id="四、水平分库" tabindex="-1"><a class="header-anchor" href="#四、水平分库" aria-hidden="true">#</a> 四、水平分库</h3><ul><li><p>将单张表的数据切分到多个服务器上去，每个服务器具有相应的库与表，只是表中数据集合不同。 水平分库分表能够有效的缓解单机和单库的性能瓶颈和压力，突破IO、连接数、硬件资源等的瓶颈.</p></li><li><p>简单讲就是根据表中的数据的逻辑关系，将同一个表中的数据按照某种条件拆分到多台数据库（主机）上面, 例如将订单表 按照id是奇数还是偶数, 分别存储在不同的库中。</p><figure><img src="https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/16657/1597204636882698240/ce46a9c5ae894a6da70a4ee5b72df1f2.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure></li></ul><h3 id="五、水平分表" tabindex="-1"><a class="header-anchor" href="#五、水平分表" aria-hidden="true">#</a> 五、水平分表</h3><ul><li><p>针对数据量巨大的单张表（比如订单表），按照规则把一张表的数据切分到多张表里面去。 但是这些表还是在同一个库中，所以库级别的数据库操作还是有IO瓶颈。</p><figure><img src="https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/fyfile/16657/1597204636882698240/307c531d662c484f9d68d249eb48620d.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure></li><li><p>总结</p><ul><li><strong>垂直分表</strong>: 将一个表按照字段分成多表，每个表存储其中一部分字段。</li><li><strong>垂直分库</strong>: 根据表的业务不同,分别存放在不同的库中,这些库分别部署在不同的服务器.</li><li><strong>水平分库</strong>: 把一张表的数据按照一定规则,分配到<strong>不同的数据库</strong>,每一个库只有这张表的部分数据.</li><li><strong>水平分表</strong>: 把一张表的数据按照一定规则,分配到<strong>同一个数据库的多张表中</strong>,每个表只有这个表的部分数据.</li></ul></li></ul><h3 id="六、分库分表带来的问题" tabindex="-1"><a class="header-anchor" href="#六、分库分表带来的问题" aria-hidden="true">#</a> 六、分库分表带来的问题</h3><ul><li><p>全局主键避重问题，主键id的选择</p></li><li><p>事务一致性问题</p></li><li><p>跨节点关联查询 join 问题</p></li><li><p>跨节点分页、排序、函数问题</p></li><li><p>ER分片</p></li><li><p>数据迁移、扩容问题</p></li></ul>',20),o=[t];function r(g,p){return a(),l("div",null,o)}const f=i(n,[["render",r],["__file","basic10、分库分表和带来的问题.html.vue"]]);export{f as default};
