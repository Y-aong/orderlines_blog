import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-2d0f66e1.js";const p={},e=t(`<h1 id="robot的运行流程" tabindex="-1"><a class="header-anchor" href="#robot的运行流程" aria-hidden="true">#</a> robot的运行流程</h1><h3 id="一、robotframework类构造" tabindex="-1"><a class="header-anchor" href="#一、robotframework类构造" aria-hidden="true">#</a> 一、<code>RobotFrameWork</code>类构造</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Application</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> usage<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> version<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> arg_limits<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> env_options<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> logger<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">**</span>auto_options<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>_ap <span class="token operator">=</span> ArgumentParser<span class="token punctuation">(</span>usage<span class="token punctuation">,</span> name<span class="token punctuation">,</span> version<span class="token punctuation">,</span> arg_limits<span class="token punctuation">,</span> self<span class="token punctuation">.</span>validate<span class="token punctuation">,</span> env_options<span class="token punctuation">,</span> <span class="token operator">**</span>auto_options<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>_logger <span class="token operator">=</span> logger <span class="token keyword">or</span> DefaultLogger<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">RobotFramework</span><span class="token punctuation">(</span>Application<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>USAGE<span class="token punctuation">,</span> arg_limits<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> env_options<span class="token operator">=</span><span class="token string">&#39;ROBOT_OPTIONS&#39;</span><span class="token punctuation">,</span> logger<span class="token operator">=</span>LOGGER<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里类的实例化比较简单。只是初始化了参数解析器和日志打印工具。</p><h3 id="二、运行逻辑" tabindex="-1"><a class="header-anchor" href="#二、运行逻辑" aria-hidden="true">#</a> 二、运行逻辑</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">run_cli</span><span class="token punctuation">(</span>arguments<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> exit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> arguments <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        arguments <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
    <span class="token comment"># 1、入口函数</span>
    <span class="token keyword">return</span> RobotFramework<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>execute_cli<span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> exit<span class="token operator">=</span>exit<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">App</span><span class="token punctuation">:</span>
    
    <span class="token keyword">def</span> <span class="token function">_execute</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> arguments<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">:</span>
        
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            <span class="token comment"># 3、主体运行逻辑</span>
            rc <span class="token operator">=</span> self<span class="token punctuation">.</span>main<span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token operator">**</span>options<span class="token punctuation">)</span>
        <span class="token keyword">except</span> DataError <span class="token keyword">as</span> err<span class="token punctuation">:</span>
            <span class="token keyword">return</span> self<span class="token punctuation">.</span>_report_error<span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> <span class="token punctuation">(</span>KeyboardInterrupt<span class="token punctuation">,</span> SystemExit<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> self<span class="token punctuation">.</span>_report_error<span class="token punctuation">(</span><span class="token string">&#39;Execution stopped by user.&#39;</span><span class="token punctuation">,</span> rc<span class="token operator">=</span>STOPPED_BY_USER<span class="token punctuation">)</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            error<span class="token punctuation">,</span> details <span class="token operator">=</span> get_error_details<span class="token punctuation">(</span>exclude_robot_traces<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> self<span class="token punctuation">.</span>_report_error<span class="token punctuation">(</span><span class="token string">&#39;Unexpected error: %s&#39;</span> <span class="token operator">%</span> error<span class="token punctuation">,</span> details<span class="token punctuation">,</span> rc<span class="token operator">=</span>FRAMEWORK_ERROR<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> rc <span class="token keyword">or</span> <span class="token number">0</span>
        
        
<span class="token keyword">class</span> <span class="token class-name">RobotFramework</span><span class="token punctuation">(</span>APP<span class="token punctuation">)</span><span class="token punctuation">:</span>

 	<span class="token keyword">def</span> <span class="token function">execute_cli</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> cli_arguments<span class="token punctuation">,</span> exit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> self<span class="token punctuation">.</span>_logger<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>_logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;%s %s&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>_ap<span class="token punctuation">.</span>name<span class="token punctuation">,</span> self<span class="token punctuation">.</span>_ap<span class="token punctuation">.</span>version<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token comment"># 2、解析参数</span>
            options<span class="token punctuation">,</span> arguments <span class="token operator">=</span> self<span class="token punctuation">.</span>_parse_arguments<span class="token punctuation">(</span>cli_arguments<span class="token punctuation">)</span>
            rc <span class="token operator">=</span> self<span class="token punctuation">.</span>_execute<span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
        <span class="token keyword">if</span> exit<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>_exit<span class="token punctuation">(</span>rc<span class="token punctuation">)</span>
        <span class="token keyword">return</span> rc

    <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> datasources<span class="token punctuation">,</span> <span class="token operator">**</span>options<span class="token punctuation">)</span><span class="token punctuation">:</span>

        <span class="token keyword">try</span><span class="token punctuation">:</span>
            settings <span class="token operator">=</span> RobotSettings<span class="token punctuation">(</span>options<span class="token punctuation">)</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            LOGGER<span class="token punctuation">.</span>register_console_logger<span class="token punctuation">(</span>stdout<span class="token operator">=</span>options<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;stdout&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> stderr<span class="token operator">=</span>options<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;stderr&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">raise</span>
        LOGGER<span class="token punctuation">.</span>register_console_logger<span class="token punctuation">(</span><span class="token operator">**</span>settings<span class="token punctuation">.</span>console_output_config<span class="token punctuation">)</span>
        LOGGER<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Settings:\\n</span><span class="token interpolation"><span class="token punctuation">{</span>settings<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
        <span class="token comment"># 3.1、获取配置信息</span>
        <span class="token keyword">if</span> settings<span class="token punctuation">.</span>pythonpath<span class="token punctuation">:</span>
            sys<span class="token punctuation">.</span>path <span class="token operator">=</span> settings<span class="token punctuation">.</span>pythonpath <span class="token operator">+</span> sys<span class="token punctuation">.</span>path
        builder <span class="token operator">=</span> TestSuiteBuilder<span class="token punctuation">(</span>
            included_extensions<span class="token operator">=</span>settings<span class="token punctuation">.</span>extension<span class="token punctuation">,</span> included_files<span class="token operator">=</span>settings<span class="token punctuation">.</span>parse_include<span class="token punctuation">,</span>
            custom_parsers<span class="token operator">=</span>settings<span class="token punctuation">.</span>parsers<span class="token punctuation">,</span> rpa<span class="token operator">=</span>settings<span class="token punctuation">.</span>rpa<span class="token punctuation">,</span>
            lang<span class="token operator">=</span>settings<span class="token punctuation">.</span>languages<span class="token punctuation">,</span> allow_empty_suite<span class="token operator">=</span>settings<span class="token punctuation">.</span>run_empty_suite<span class="token punctuation">)</span>
        suite <span class="token operator">=</span> builder<span class="token punctuation">.</span>build<span class="token punctuation">(</span><span class="token operator">*</span>datasources<span class="token punctuation">)</span>
        <span class="token keyword">if</span> settings<span class="token punctuation">.</span>pre_run_modifiers<span class="token punctuation">:</span>
            suite<span class="token punctuation">.</span>visit<span class="token punctuation">(</span>ModelModifier<span class="token punctuation">(</span>settings<span class="token punctuation">.</span>pre_run_modifiers<span class="token punctuation">,</span> settings<span class="token punctuation">.</span>run_empty_suite<span class="token punctuation">,</span> LOGGER<span class="token punctuation">)</span><span class="token punctuation">)</span>
        suite<span class="token punctuation">.</span>configure<span class="token punctuation">(</span><span class="token operator">**</span>settings<span class="token punctuation">.</span>suite_config<span class="token punctuation">)</span>
        settings<span class="token punctuation">.</span>rpa <span class="token operator">=</span> suite<span class="token punctuation">.</span>validate_execution_mode<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment"># 3.2、在当前上下文中运行</span>
        <span class="token keyword">with</span> pyloggingconf<span class="token punctuation">.</span>robot_handler_enabled<span class="token punctuation">(</span>settings<span class="token punctuation">.</span>log_level<span class="token punctuation">)</span><span class="token punctuation">:</span>
            old_max_error_lines <span class="token operator">=</span> text<span class="token punctuation">.</span>MAX_ERROR_LINES
            old_max_assign_length <span class="token operator">=</span> text<span class="token punctuation">.</span>MAX_ASSIGN_LENGTH
            text<span class="token punctuation">.</span>MAX_ERROR_LINES <span class="token operator">=</span> settings<span class="token punctuation">.</span>max_error_lines
            text<span class="token punctuation">.</span>MAX_ASSIGN_LENGTH <span class="token operator">=</span> settings<span class="token punctuation">.</span>max_assign_length
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                <span class="token comment"># 3.3、运行suite</span>
                result <span class="token operator">=</span> suite<span class="token punctuation">.</span>run<span class="token punctuation">(</span>settings<span class="token punctuation">)</span>
            <span class="token keyword">finally</span><span class="token punctuation">:</span>
                text<span class="token punctuation">.</span>MAX_ERROR_LINES <span class="token operator">=</span> old_max_error_lines
                text<span class="token punctuation">.</span>MAX_ASSIGN_LENGTH <span class="token operator">=</span> old_max_assign_length
            LOGGER<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;Tests execution ended. Statistics:\\n%s&quot;</span> <span class="token operator">%</span> result<span class="token punctuation">.</span>suite<span class="token punctuation">.</span>stat_message<span class="token punctuation">)</span>
            <span class="token keyword">if</span> settings<span class="token punctuation">.</span>log <span class="token keyword">or</span> settings<span class="token punctuation">.</span>report <span class="token keyword">or</span> settings<span class="token punctuation">.</span>xunit<span class="token punctuation">:</span>
                <span class="token comment"># 4、处理返回值，生成报告信息</span>
                writer <span class="token operator">=</span> ResultWriter<span class="token punctuation">(</span>settings<span class="token punctuation">.</span>output <span class="token keyword">if</span> settings<span class="token punctuation">.</span>log <span class="token keyword">else</span> result<span class="token punctuation">)</span>
                writer<span class="token punctuation">.</span>write_results<span class="token punctuation">(</span>settings<span class="token punctuation">.</span>get_rebot_settings<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> result<span class="token punctuation">.</span>return_code
    
<span class="token keyword">class</span> <span class="token class-name">TestSuite</span><span class="token punctuation">(</span>model<span class="token punctuation">.</span>TestSuite<span class="token punctuation">[</span>Keyword<span class="token punctuation">,</span> TestCase<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    
    <span class="token keyword">def</span> <span class="token function">visit</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> visitor<span class="token punctuation">:</span> SuiteVisitor<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;:mod:\`Visitor interface &lt;robot.model.visitor&gt;\` entry-point.&quot;&quot;&quot;</span>
        visitor<span class="token punctuation">.</span>visit_suite<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        
    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> settings<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">**</span>options<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">from</span> <span class="token punctuation">.</span>namespace <span class="token keyword">import</span> IMPORTER
        <span class="token keyword">from</span> <span class="token punctuation">.</span>signalhandler <span class="token keyword">import</span> STOP_SIGNAL_MONITOR
        <span class="token keyword">from</span> <span class="token punctuation">.</span>suiterunner <span class="token keyword">import</span> SuiteRunner

        <span class="token keyword">with</span> LOGGER<span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> settings<span class="token punctuation">:</span>
                settings <span class="token operator">=</span> RobotSettings<span class="token punctuation">(</span>options<span class="token punctuation">)</span>
                LOGGER<span class="token punctuation">.</span>register_console_logger<span class="token punctuation">(</span><span class="token operator">**</span>settings<span class="token punctuation">.</span>console_output_config<span class="token punctuation">)</span>
            <span class="token keyword">with</span> pyloggingconf<span class="token punctuation">.</span>robot_handler_enabled<span class="token punctuation">(</span>settings<span class="token punctuation">.</span>log_level<span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">with</span> STOP_SIGNAL_MONITOR<span class="token punctuation">:</span>
                    IMPORTER<span class="token punctuation">.</span>reset<span class="token punctuation">(</span><span class="token punctuation">)</span>
                    output <span class="token operator">=</span> Output<span class="token punctuation">(</span>settings<span class="token punctuation">)</span>
                    runner <span class="token operator">=</span> SuiteRunner<span class="token punctuation">(</span>output<span class="token punctuation">,</span> settings<span class="token punctuation">)</span>
                    <span class="token comment"># 3.4、真正的运行逻辑</span>
                    self<span class="token punctuation">.</span>visit<span class="token punctuation">(</span>runner<span class="token punctuation">)</span>
                output<span class="token punctuation">.</span>close<span class="token punctuation">(</span>runner<span class="token punctuation">.</span>result<span class="token punctuation">)</span>
        <span class="token keyword">return</span> runner<span class="token punctuation">.</span>result

<span class="token keyword">class</span> <span class="token class-name">SuiteVisitor</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">visit_suite</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> suite<span class="token punctuation">:</span> <span class="token string">&#39;TestSuite&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 3.5、这里也就是访问者的意义所在。对象和算法进行分离，被访问者提供接口改变被访问者状态和信息</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>start_suite<span class="token punctuation">(</span>suite<span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">False</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> suite<span class="token punctuation">.</span>has_setup<span class="token punctuation">:</span>
                suite<span class="token punctuation">.</span>setup<span class="token punctuation">.</span>visit<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
            suite<span class="token punctuation">.</span>suites<span class="token punctuation">.</span>visit<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
            suite<span class="token punctuation">.</span>tests<span class="token punctuation">.</span>visit<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
            <span class="token keyword">if</span> suite<span class="token punctuation">.</span>has_teardown<span class="token punctuation">:</span>
                suite<span class="token punctuation">.</span>teardown<span class="token punctuation">.</span>visit<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>end_suite<span class="token punctuation">(</span>suite<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们总结下来robot的运行流程如下</p><ul><li>解析参数</li><li>获取配置信息</li><li>运行suite <ul><li>运行<code>setup</code>：初始化函数</li><li>运行<code>tests</code>：测试用例</li><li>运行<code>teardown</code>：运行结束函数</li></ul></li><li>获取运行状态，生成报告</li></ul><p>这里<code>self.visit(runner)</code>在robot中多处源码都有出现，这里实际上使用了访问者模式，将测试suite,和suite运行分离，好处就是对对象结构中的不同元素suite, test, keyword, 也包括if、for、try-except可以进行不同的操作。</p>`,10),o=[e];function c(i,l){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","3、robot运行流程.html.vue"]]);export{k as default};
