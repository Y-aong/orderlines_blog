import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as l,e as r}from"./app-2d0f66e1.js";const o={},n=r('<h1 id="_1、mysql的体系" tabindex="-1"><a class="header-anchor" href="#_1、mysql的体系" aria-hidden="true">#</a> 1、mysql的体系</h1><h3 id="一、网络连接层" tabindex="-1"><a class="header-anchor" href="#一、网络连接层" aria-hidden="true">#</a> 一、网络连接层</h3><ul><li><strong>客户端连接器（Client Connectors）：提供与MySQL服务器建立的支持。目前几乎支持所有主流的服务端编程技术，例如常见的 Java、C、Python、.NET等，它们通过各自API技术与MySQL建立连接。</strong></li></ul><h3 id="二、服务层-mysql-server" tabindex="-1"><a class="header-anchor" href="#二、服务层-mysql-server" aria-hidden="true">#</a> 二、服务层（MySQL Server）</h3><p><strong>服务层是MySQL Server的核心，主要包含系统管理和控制工具、连接池、SQL接口、解析器、查询优化器和缓存六个部分。</strong></p><ul><li><p><strong>连接池（Connection Pool）</strong>：负责存储和管理客户端与数据库的连接，一个线程负责管理一个连接。</p></li><li><p><strong>系统管理和控制工具（Management Services &amp; Utilities）</strong>：例如备份恢复、安全管理、集群管理等</p></li><li><p><strong>SQL接口（SQL Interface）</strong>：用于接受客户端发送的各种SQL命令，并且返回用户需要查询的结果。比如DML、DDL、存储过程、视图、触发器等。</p></li><li><p><strong>解析器（Parser）</strong>：负责将请求的SQL解析生成一个&quot;解析树&quot;。然后根据一些MySQL规则进一步检查解析树是否合法。</p></li><li><p><strong>查询优化器（Optimizer）</strong>：当“解析树”通过解析器语法检查后，将交由优化器将其转化成执行计划，然后与存储引擎交互。</p><blockquote><p><strong>select uid,name from user where gender=1;</strong></p><p><strong>选取--》投影--》联接 策略</strong></p><p><strong>1）select先根据where语句进行选取，并不是查询出全部数据再过滤</strong></p><p><strong>2）select查询根据uid和name进行属性投影，并不是取出所有字段</strong></p><p><strong>3）将前面选取和投影联接起来最终生成查询结果</strong></p></blockquote></li><li><p><strong>缓存（Cache&amp;Buffer）</strong>： 缓存机制是由一系列小缓存组成的。比如表缓存，记录缓存，权限缓存，引擎缓存等。如果查询缓存有命中的查询结果，查询语句就可以直接去查询缓存中取数据。</p></li></ul><h3 id="三、存储引擎层-pluggable-storage-engines" tabindex="-1"><a class="header-anchor" href="#三、存储引擎层-pluggable-storage-engines" aria-hidden="true">#</a> 三、存储引擎层（Pluggable Storage Engines）</h3><p>存储引擎负责MySQL中数据的存储与提取，与底层系统文件进行交互。MySQL存储引擎是插件式的，服务器中的查询执行引擎通过接口与存储引擎进行通信，接口屏蔽了不同存储引擎之间的差异<br> 。现在有很多种存储引擎，各有各的特点，最常见的是MyISAM和InnoDB。</p><h3 id="四、系统文件层-file-system" tabindex="-1"><a class="header-anchor" href="#四、系统文件层-file-system" aria-hidden="true">#</a> 四、系统文件层（File System）</h3><p>该层负责将数据库的数据和日志存储在文件系统之上，并完成与存储引擎的交互，是文件的物理存储层。主要包含日志文件，数据文件，配置文件，pid 文件，socket 文件等。</p><ul><li>日志文件 <ul><li>错误日志（Error log） 默认开启，show variables like &#39;%log_error%&#39;</li><li>通用查询日志（General query log） 记录一般查询语句，show variables like &#39;%general%&#39;;</li><li>二进制日志（binary log） 记录了对MySQL数据库执行的更改操作，并且记录了语句的发生时间、执行时长；但是它不记录select、show等不修改数据库的SQL。主要用于数据库恢复和主从复制。 show<br> variables like &#39;%log_bin%&#39;; //是否开启 show variables like &#39;%binlog%&#39;; //参数查看 show binary logs;//查看日志文件</li><li>慢查询日志（Slow query log） 记录所有执行时间超时的查询SQL，默认是10秒。 show variables like &#39;%slow_query%&#39;; //是否开启 show variables like &#39;<br> %long_query_time%&#39;; //时长</li></ul></li><li>配置文件 用于存放MySQL所有的配置信息文件，比如my.cnf、my.ini等。</li><li>数据文件 <ul><li>db.opt 文件：记录这个库的默认使用的字符集和校验规则。</li><li>frm 文件：存储与表相关的元数据（meta）信息，包括表结构的定义信息等，每一张表都会有一个frm 文件。</li><li>MYD 文件：MyISAM 存储引擎专用，存放 MyISAM 表的数据（data)，每一张表都会有一个 .MYD 文件。</li><li>MYI 文件：MyISAM 存储引擎专用，存放 MyISAM 表的索引相关信息，每一张 MyISAM 表对应一个 .MYI 文件。</li><li>ibd文件和 IBDATA 文件：存放 InnoDB 的数据文件（包括索引）。InnoDB 存储引擎有两种表空间方式：独享表空间和共享表空间。独享表空间使用 .ibd 文件来存放数据，且每一张 InnoDB 表对应一个 .ibd<br> 文件。共享表空间使用 .ibdata 文件，所有表共同使用一个（或多个，自行配置）.ibdata 文件。</li><li>ibdata1 文件：系统表空间数据文件，存储表元数据、Undo日志等 。</li><li>ib_logfile0、ib_logfile1 文件：Redo log 日志文件。</li></ul></li><li>pid 文件 pid 文件是 mysqld 应用程序在 Unix/Linux 环境下的一个进程文件，和许多其他 Unix/Linux 服务端程序一样，它存放着自己的进程 id。</li><li>socket 文件 socket 文件也是在 Unix/Linux 环境下才有的，用户在 Unix/Linux 环境下客户端连接可以不通过 TCP/IP 网络而直接使用 Unix Socket 来连接 MySQL。</li></ul>',11),s=[n];function a(t,g){return i(),l("div",null,s)}const c=e(o,[["render",a],["__file","basic1、mysql的体系系统.html.vue"]]);export{c as default};
