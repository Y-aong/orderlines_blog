const e=JSON.parse('{"key":"v-04f5a9e1","path":"/posts/Redis/redis7%E3%80%81epoll%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8.html","title":"7、IO多路复用","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2023-07-15T00:00:00.000Z","category":["redis"],"tag":["IO多路复用"],"description":"7、IO多路复用 问题redis单线程如何处理多并发客户端连接，为什么单线程还可以这么快 redis使用epoll来实现IO多路复用，将连接信息和事件放到队列中，一次性的放到文件事件分派器中，事件分配器分发给事件处理器","head":[["meta",{"property":"og:url","content":"https://y-aong.github.io/orderlines_blog/orderlines_blog/posts/Redis/redis7%E3%80%81epoll%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"ORDERLINES"}],["meta",{"property":"og:title","content":"7、IO多路复用"}],["meta",{"property":"og:description","content":"7、IO多路复用 问题redis单线程如何处理多并发客户端连接，为什么单线程还可以这么快 redis使用epoll来实现IO多路复用，将连接信息和事件放到队列中，一次性的放到文件事件分派器中，事件分配器分发给事件处理器"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-03-17T09:50:53.000Z"}],["meta",{"property":"article:author","content":"Y-aong"}],["meta",{"property":"article:tag","content":"IO多路复用"}],["meta",{"property":"article:published_time","content":"2023-07-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-17T09:50:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"7、IO多路复用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-15T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-17T09:50:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Y-aong\\",\\"url\\":\\"https://github.com/Y-aong\\"}]}"]]},"headers":[{"level":3,"title":"1、定义","slug":"_1、定义","link":"#_1、定义","children":[]},{"level":3,"title":"2、名称解释","slug":"_2、名称解释","link":"#_2、名称解释","children":[]},{"level":3,"title":"3、Reactor","slug":"_3、reactor","link":"#_3、reactor","children":[]}],"git":{"createdTime":1736258707000,"updatedTime":1742205053000,"contributors":[{"name":"Y-aong","email":"1627469727@qq.com","commits":2}]},"readingTime":{"minutes":3.85,"words":1154},"filePathRelative":"posts/Redis/redis7、epoll多路复用.md","localizedDate":"July 15, 2023","excerpt":"<h1> 7、IO多路复用</h1>\\n<p><strong>问题redis单线程如何处理多并发客户端连接，为什么单线程还可以这么快</strong></p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>redis使用epoll来实现IO多路复用，将连接信息和事件放到队列中，一次性的放到文件事件分派器中，事件分配器分发给事件处理器\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
