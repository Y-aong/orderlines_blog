const e=JSON.parse('{"key":"v-391b2cdd","path":"/posts/Python/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2%E3%80%81python%E4%B8%AD5%E7%A7%8D%E9%98%9F%E5%88%97%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html","title":"2、python中5种队列数据结构","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2024-11-11T00:00:00.000Z","category":["python"],"tag":["数据类型"],"description":"2、python中5种队列数据结构 一、python基础队列：列表 1.1 列表作为队列的简单应用 列表作为python中使用最常见的一种数据类型，同样也是最方便实现队列的数据结构。尽管这不是最高效的解决方案 ，但是可能是最便捷的实现方案。 列表提供了append()方法用于在尾部添加元素（相当于队列的入队操作），以及pop(0)方法来移除并返回列表的第一个元素（相当于队列的出队操作）。 入队（Enqueue）：使用list.append()方法在列表的末尾添加元素。这对应于队列中新元素的加入，遵循先进先出的原则。 出队（Dequeue）：标准的列表不直接支持队列的头部移除操作 ，通常使用list.pop(0)来模拟。这种方法虽然实现了功能，但是效率低下，特别是当队列很大时，因为每次出队操作都需要移动后续的所有元素。","head":[["meta",{"property":"og:url","content":"https://y-aong.github.io/orderlines_blog/orderlines_blog/posts/Python/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2%E3%80%81python%E4%B8%AD5%E7%A7%8D%E9%98%9F%E5%88%97%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html"}],["meta",{"property":"og:site_name","content":"ORDERLINES"}],["meta",{"property":"og:title","content":"2、python中5种队列数据结构"}],["meta",{"property":"og:description","content":"2、python中5种队列数据结构 一、python基础队列：列表 1.1 列表作为队列的简单应用 列表作为python中使用最常见的一种数据类型，同样也是最方便实现队列的数据结构。尽管这不是最高效的解决方案 ，但是可能是最便捷的实现方案。 列表提供了append()方法用于在尾部添加元素（相当于队列的入队操作），以及pop(0)方法来移除并返回列表的第一个元素（相当于队列的出队操作）。 入队（Enqueue）：使用list.append()方法在列表的末尾添加元素。这对应于队列中新元素的加入，遵循先进先出的原则。 出队（Dequeue）：标准的列表不直接支持队列的头部移除操作 ，通常使用list.pop(0)来模拟。这种方法虽然实现了功能，但是效率低下，特别是当队列很大时，因为每次出队操作都需要移动后续的所有元素。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Y-aong"}],["meta",{"property":"article:tag","content":"数据类型"}],["meta",{"property":"article:published_time","content":"2024-11-11T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2、python中5种队列数据结构\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-11-11T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Y-aong\\",\\"url\\":\\"https://github.com/Y-aong\\"}]}"]]},"headers":[{"level":3,"title":"一、python基础队列：列表","slug":"一、python基础队列-列表","link":"#一、python基础队列-列表","children":[]},{"level":3,"title":"二、高效队列：collections.deque","slug":"二、高效队列-collections-deque","link":"#二、高效队列-collections-deque","children":[]},{"level":3,"title":"三、并发安全：queue模块","slug":"三、并发安全-queue模块","link":"#三、并发安全-queue模块","children":[]},{"level":3,"title":"四、高级数据结构：堆与优先队列 PriorityQueue","slug":"四、高级数据结构-堆与优先队列-priorityqueue","link":"#四、高级数据结构-堆与优先队列-priorityqueue","children":[]},{"level":3,"title":"五、扩展视野：协程和asyncio.Queue","slug":"五、扩展视野-协程和asyncio-queue","link":"#五、扩展视野-协程和asyncio-queue","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":10.89,"words":3267},"filePathRelative":"posts/Python/基础知识/2、python中5种队列数据结构.md","localizedDate":"November 11, 2024","excerpt":"<h1> 2、python中5种队列数据结构</h1>\\n<h3> 一、python基础队列：列表</h3>\\n<h4> 1.1 列表作为队列的简单应用</h4>\\n<p>列表作为python中使用最常见的一种数据类型，同样也是最方便实现队列的数据结构。尽管这不是最高效的解决方案 ，但是可能是最便捷的实现方案。</p>\\n<p>列表提供了<code>append()</code>方法用于在尾部添加元素（相当于队列的入队操作），以及<code>pop(0)</code>方法来移除并返回列表的第一个元素（相当于队列的出队操作）。</p>\\n<ul>\\n<li><strong>入队（Enqueue）</strong>：使用<code>list.append()</code>方法在列表的末尾添加元素。这对应于队列中新元素的加入，遵循先进先出的原则。</li>\\n<li><strong>出队（Dequeue）</strong>：标准的列表不直接支持队列的头部移除操作 ，通常使用<code>list.pop(0)</code>来模拟。这种方法虽然实现了功能，但是效率低下，特别是当队列很大时，因为每次出队操作都需要移动后续的所有元素。</li>\\n</ul>","autoDesc":true}');export{e as data};
