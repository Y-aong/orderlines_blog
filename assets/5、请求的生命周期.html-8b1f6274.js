import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o,c,a as n,b as s,d as l,e as a}from"./app-2d0f66e1.js";const i={},u=a(`<h1 id="_5、请求的生命周期" tabindex="-1"><a class="header-anchor" href="#_5、请求的生命周期" aria-hidden="true">#</a> 5、请求的生命周期</h1><p>请求的生命周期这个是比较复杂的我们通过两个方面来进行分析，分别用应用上下文和请求上下文，以及before_request，after_request等处理函数进行分析</p><p>源码部分</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token keyword">def</span> <span class="token function">wsgi_app</span><span class="token punctuation">(</span>
        self<span class="token punctuation">,</span> environ<span class="token punctuation">:</span> WSGIEnvironment<span class="token punctuation">,</span> start_response<span class="token punctuation">:</span> StartResponse
    <span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> cabc<span class="token punctuation">.</span>Iterable<span class="token punctuation">[</span><span class="token builtin">bytes</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        ctx <span class="token operator">=</span> self<span class="token punctuation">.</span>request_context<span class="token punctuation">(</span>environ<span class="token punctuation">)</span>
        error<span class="token punctuation">:</span> BaseException <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                ctx<span class="token punctuation">.</span>push<span class="token punctuation">(</span><span class="token punctuation">)</span>
                response <span class="token operator">=</span> self<span class="token punctuation">.</span>full_dispatch_request<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
                error <span class="token operator">=</span> e
                response <span class="token operator">=</span> self<span class="token punctuation">.</span>handle_exception<span class="token punctuation">(</span>e<span class="token punctuation">)</span>
            <span class="token keyword">except</span><span class="token punctuation">:</span>  <span class="token comment"># noqa: B001</span>
                error <span class="token operator">=</span> sys<span class="token punctuation">.</span>exc_info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
                <span class="token keyword">raise</span>
            <span class="token keyword">return</span> response<span class="token punctuation">(</span>environ<span class="token punctuation">,</span> start_response<span class="token punctuation">)</span>
        <span class="token keyword">finally</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token string">&quot;werkzeug.debug.preserve_context&quot;</span> <span class="token keyword">in</span> environ<span class="token punctuation">:</span>
                environ<span class="token punctuation">[</span><span class="token string">&quot;werkzeug.debug.preserve_context&quot;</span><span class="token punctuation">]</span><span class="token punctuation">(</span>_cv_app<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                environ<span class="token punctuation">[</span><span class="token string">&quot;werkzeug.debug.preserve_context&quot;</span><span class="token punctuation">]</span><span class="token punctuation">(</span>_cv_request<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

            <span class="token keyword">if</span> error <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span> <span class="token keyword">and</span> self<span class="token punctuation">.</span>should_ignore_error<span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">:</span>
                error <span class="token operator">=</span> <span class="token boolean">None</span>

            ctx<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>error<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>整体可以分为三个部分</p><ul><li><code>ctx = self.request_context(environ)</code>上下文操作</li><li><code>response = self.full_dispatch_request()</code>请求函数操作</li><li><code>response = self.handle_exception(e)</code>异常处理</li></ul><h3 id="一、上下文操作" tabindex="-1"><a class="header-anchor" href="#一、上下文操作" aria-hidden="true">#</a> 一、上下文操作</h3><h4 id="_1、基本操作" tabindex="-1"><a class="header-anchor" href="#_1、基本操作" aria-hidden="true">#</a> 1、基本操作</h4><p><code>ctx = self.request_context(environ) ctx.push()</code>上下文操作里面到底做了什么东西呢？</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Flask</span><span class="token punctuation">(</span>APP<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">request_context</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> environ<span class="token punctuation">:</span> WSGIEnvironment<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> RequestContext<span class="token punctuation">:</span>
        <span class="token keyword">return</span> RequestContext<span class="token punctuation">(</span>self<span class="token punctuation">,</span> environ<span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">wsgi_app</span><span class="token punctuation">(</span>
        self<span class="token punctuation">,</span> environ<span class="token punctuation">:</span> WSGIEnvironment<span class="token punctuation">,</span> start_response<span class="token punctuation">:</span> StartResponse
    <span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> cabc<span class="token punctuation">.</span>Iterable<span class="token punctuation">[</span><span class="token builtin">bytes</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token comment"># 1、先创建请求上下文</span>
        ctx <span class="token operator">=</span> self<span class="token punctuation">.</span>request_context<span class="token punctuation">(</span>environ<span class="token punctuation">)</span>
        error<span class="token punctuation">:</span> BaseException <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                <span class="token comment"># 2、请求上下文放入ContextVars中</span>
                ctx<span class="token punctuation">.</span>push<span class="token punctuation">(</span><span class="token punctuation">)</span>
                response <span class="token operator">=</span> self<span class="token punctuation">.</span>full_dispatch_request<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
                error <span class="token operator">=</span> e
                response <span class="token operator">=</span> self<span class="token punctuation">.</span>handle_exception<span class="token punctuation">(</span>e<span class="token punctuation">)</span>
            <span class="token keyword">except</span><span class="token punctuation">:</span>  <span class="token comment"># noqa: B001</span>
                error <span class="token operator">=</span> sys<span class="token punctuation">.</span>exc_info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
                <span class="token keyword">raise</span>
            <span class="token keyword">return</span> response<span class="token punctuation">(</span>environ<span class="token punctuation">,</span> start_response<span class="token punctuation">)</span>
        <span class="token keyword">finally</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token string">&quot;werkzeug.debug.preserve_context&quot;</span> <span class="token keyword">in</span> environ<span class="token punctuation">:</span>
                environ<span class="token punctuation">[</span><span class="token string">&quot;werkzeug.debug.preserve_context&quot;</span><span class="token punctuation">]</span><span class="token punctuation">(</span>_cv_app<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                environ<span class="token punctuation">[</span><span class="token string">&quot;werkzeug.debug.preserve_context&quot;</span><span class="token punctuation">]</span><span class="token punctuation">(</span>_cv_request<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

            <span class="token keyword">if</span> error <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span> <span class="token keyword">and</span> self<span class="token punctuation">.</span>should_ignore_error<span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">:</span>
                error <span class="token operator">=</span> <span class="token boolean">None</span>
			<span class="token comment"># 3、最后pop掉当前的请求上下文</span>
            ctx<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    
<span class="token keyword">class</span> <span class="token class-name">RequestContext</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>
        self<span class="token punctuation">,</span>
        app<span class="token punctuation">:</span> Flask<span class="token punctuation">,</span>
        environ<span class="token punctuation">:</span> WSGIEnvironment<span class="token punctuation">,</span>
        request<span class="token punctuation">:</span> Request <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        session<span class="token punctuation">:</span> SessionMixin <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>app <span class="token operator">=</span> app
        <span class="token keyword">if</span> request <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            request <span class="token operator">=</span> app<span class="token punctuation">.</span>request_class<span class="token punctuation">(</span>environ<span class="token punctuation">)</span>
            request<span class="token punctuation">.</span>json_module <span class="token operator">=</span> app<span class="token punctuation">.</span>json
        self<span class="token punctuation">.</span>request<span class="token punctuation">:</span> Request <span class="token operator">=</span> request
        self<span class="token punctuation">.</span>url_adapter <span class="token operator">=</span> <span class="token boolean">None</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>url_adapter <span class="token operator">=</span> app<span class="token punctuation">.</span>create_url_adapter<span class="token punctuation">(</span>self<span class="token punctuation">.</span>request<span class="token punctuation">)</span>
        <span class="token keyword">except</span> HTTPException <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>request<span class="token punctuation">.</span>routing_exception <span class="token operator">=</span> e
        self<span class="token punctuation">.</span>flashes<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token builtin">tuple</span><span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span>
        self<span class="token punctuation">.</span>session<span class="token punctuation">:</span> SessionMixin <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> session
        self<span class="token punctuation">.</span>_after_request_functions<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        self<span class="token punctuation">.</span>_cv_tokens <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        
    <span class="token keyword">def</span> <span class="token function">push</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        app_ctx <span class="token operator">=</span> _cv_app<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> app_ctx <span class="token keyword">is</span> <span class="token boolean">None</span> <span class="token keyword">or</span> app_ctx<span class="token punctuation">.</span>app <span class="token keyword">is</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>app<span class="token punctuation">:</span>
            <span class="token comment"># 2.1、先push应用上下文</span>
            app_ctx <span class="token operator">=</span> self<span class="token punctuation">.</span>app<span class="token punctuation">.</span>app_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
            app_ctx<span class="token punctuation">.</span>push<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            app_ctx <span class="token operator">=</span> <span class="token boolean">None</span>
		<span class="token comment"># 2.2再处理token,session等</span>
        self<span class="token punctuation">.</span>_cv_tokens<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>_cv_request<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">,</span> app_ctx<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>session <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            session_interface <span class="token operator">=</span> self<span class="token punctuation">.</span>app<span class="token punctuation">.</span>session_interface
            self<span class="token punctuation">.</span>session <span class="token operator">=</span> session_interface<span class="token punctuation">.</span>open_session<span class="token punctuation">(</span>self<span class="token punctuation">.</span>app<span class="token punctuation">,</span> self<span class="token punctuation">.</span>request<span class="token punctuation">)</span>

            <span class="token keyword">if</span> self<span class="token punctuation">.</span>session <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>session <span class="token operator">=</span> session_interface<span class="token punctuation">.</span>make_null_session<span class="token punctuation">(</span>self<span class="token punctuation">.</span>app<span class="token punctuation">)</span>

        <span class="token keyword">if</span> self<span class="token punctuation">.</span>url_adapter <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>match_request<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>创建应用上下文，和请求上下文</li><li>先处理应用上下文，再处理token、session等</li><li>最后上下文pop掉</li></ul><h4 id="_2、请求上下文和应用上下文的关系" tabindex="-1"><a class="header-anchor" href="#_2、请求上下文和应用上下文的关系" aria-hidden="true">#</a> 2、请求上下文和应用上下文的关系</h4><p><strong>request</strong> 就是请求上下文的对象，保存了当前本次请求的相关数据，请求上下文对象有：request、session，token</p>`,13),r=n("li",null,[n("p",null,[s("request"),n("br"),s(" 封装了HTTP请求的内容，针对的是http请求。举例：user = request.args.get('user')，获取的是get请求的参数。")])],-1),k=n("br",null,null,-1),d={href:"http://user.id",target:"_blank",rel:"noopener noreferrer"},v=a(`<p>应用上下文，但它不是一直存在的，它只是request context 中的一个对 app 的代理(人)，所谓local proxy。它的作用主要是帮助 request 获取当前的应用，它是伴 request 而生，随 request 而灭的。</p><h4 id="_3、请求上下文和应用上下文的生命周期" tabindex="-1"><a class="header-anchor" href="#_3、请求上下文和应用上下文的生命周期" aria-hidden="true">#</a> 3、请求上下文和应用上下文的生命周期</h4><p>request context先于app context创建</p><p>request context先于app context消灭</p><p>app contex是最后pop的</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">pop</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> exc<span class="token punctuation">:</span> BaseException <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> _sentinel<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>  <span class="token comment"># type: ignore</span>
    clear_request <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>_cv_tokens<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> clear_request<span class="token punctuation">:</span>
            <span class="token keyword">if</span> exc <span class="token keyword">is</span> _sentinel<span class="token punctuation">:</span>
                exc <span class="token operator">=</span> sys<span class="token punctuation">.</span>exc_info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
            self<span class="token punctuation">.</span>app<span class="token punctuation">.</span>do_teardown_request<span class="token punctuation">(</span>exc<span class="token punctuation">)</span>

            request_close <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>request<span class="token punctuation">,</span> <span class="token string">&quot;close&quot;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> request_close <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                request_close<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">finally</span><span class="token punctuation">:</span>
        ctx <span class="token operator">=</span> _cv_request<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
        token<span class="token punctuation">,</span> app_ctx <span class="token operator">=</span> self<span class="token punctuation">.</span>_cv_tokens<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>
        _cv_request<span class="token punctuation">.</span>reset<span class="token punctuation">(</span>token<span class="token punctuation">)</span>

        <span class="token comment"># get rid of circular dependencies at the end of the request</span>
        <span class="token comment"># so that we don&#39;t require the GC to be active.</span>
        <span class="token keyword">if</span> clear_request<span class="token punctuation">:</span>
            ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">&quot;werkzeug.request&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>

        <span class="token keyword">if</span> app_ctx <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            app_ctx<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>exc<span class="token punctuation">)</span>

        <span class="token keyword">if</span> ctx <span class="token keyword">is</span> <span class="token keyword">not</span> self<span class="token punctuation">:</span>
            <span class="token keyword">raise</span> AssertionError<span class="token punctuation">(</span>
                <span class="token string-interpolation"><span class="token string">f&quot;Popped wrong request context. (</span><span class="token interpolation"><span class="token punctuation">{</span>ctx<span class="token conversion-option punctuation">!r</span><span class="token punctuation">}</span></span><span class="token string"> instead of </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token conversion-option punctuation">!r</span><span class="token punctuation">}</span></span><span class="token string">)&quot;</span></span>
            <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二、处理函数运行" tabindex="-1"><a class="header-anchor" href="#二、处理函数运行" aria-hidden="true">#</a> 二、处理函数运行</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">full_dispatch_request</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Response<span class="token punctuation">:</span>
    self<span class="token punctuation">.</span>_got_first_request <span class="token operator">=</span> <span class="token boolean">True</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        request_started<span class="token punctuation">.</span>send<span class="token punctuation">(</span>self<span class="token punctuation">,</span> _async_wrapper<span class="token operator">=</span>self<span class="token punctuation">.</span>ensure_sync<span class="token punctuation">)</span>
        <span class="token comment"># 第一步</span>
        rv <span class="token operator">=</span> self<span class="token punctuation">.</span>preprocess_request<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> rv <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token comment"># 第二步</span>
            rv <span class="token operator">=</span> self<span class="token punctuation">.</span>dispatch_request<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        rv <span class="token operator">=</span> self<span class="token punctuation">.</span>handle_user_exception<span class="token punctuation">(</span>e<span class="token punctuation">)</span>
    <span class="token comment">#第三步</span>
    <span class="token keyword">return</span> self<span class="token punctuation">.</span>finalize_request<span class="token punctuation">(</span>rv<span class="token punctuation">)</span>
 
<span class="token keyword">def</span> <span class="token function">preprocess_request</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ft<span class="token punctuation">.</span>ResponseReturnValue <span class="token operator">|</span> <span class="token boolean">None</span><span class="token punctuation">:</span>

    names <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token builtin">reversed</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>blueprints<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> name <span class="token keyword">in</span> names<span class="token punctuation">:</span>
        <span class="token keyword">if</span> name <span class="token keyword">in</span> self<span class="token punctuation">.</span>url_value_preprocessors<span class="token punctuation">:</span>
            <span class="token keyword">for</span> url_func <span class="token keyword">in</span> self<span class="token punctuation">.</span>url_value_preprocessors<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">:</span>
                url_func<span class="token punctuation">(</span>request<span class="token punctuation">.</span>endpoint<span class="token punctuation">,</span> request<span class="token punctuation">.</span>view_args<span class="token punctuation">)</span>

    <span class="token keyword">for</span> name <span class="token keyword">in</span> names<span class="token punctuation">:</span>
        <span class="token keyword">if</span> name <span class="token keyword">in</span> self<span class="token punctuation">.</span>before_request_funcs<span class="token punctuation">:</span>
            <span class="token keyword">for</span> before_func <span class="token keyword">in</span> self<span class="token punctuation">.</span>before_request_funcs<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">:</span>
                rv <span class="token operator">=</span> self<span class="token punctuation">.</span>ensure_sync<span class="token punctuation">(</span>before_func<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> rv <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                    <span class="token keyword">return</span> rv  <span class="token comment"># type: ignore[no-any-return]</span>
    <span class="token keyword">return</span> <span class="token boolean">None</span>
    
<span class="token keyword">def</span> <span class="token function">dispatch_request</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> ft<span class="token punctuation">.</span>ResponseReturnValue<span class="token punctuation">:</span>

    req <span class="token operator">=</span> request_ctx<span class="token punctuation">.</span>request
    <span class="token keyword">if</span> req<span class="token punctuation">.</span>routing_exception <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>raise_routing_exception<span class="token punctuation">(</span>req<span class="token punctuation">)</span>
    rule<span class="token punctuation">:</span> Rule <span class="token operator">=</span> req<span class="token punctuation">.</span>url_rule  <span class="token comment"># type: ignore[assignment]</span>
   
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
        <span class="token builtin">getattr</span><span class="token punctuation">(</span>rule<span class="token punctuation">,</span> <span class="token string">&quot;provide_automatic_options&quot;</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span>
        <span class="token keyword">and</span> req<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&quot;OPTIONS&quot;</span>
    <span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>make_default_options_response<span class="token punctuation">(</span><span class="token punctuation">)</span>

    view_args<span class="token punctuation">:</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>Any<span class="token punctuation">]</span> <span class="token operator">=</span> req<span class="token punctuation">.</span>view_args  <span class="token comment"># type: ignore[assignment]</span>
    <span class="token keyword">return</span> self<span class="token punctuation">.</span>ensure_sync<span class="token punctuation">(</span>self<span class="token punctuation">.</span>view_functions<span class="token punctuation">[</span>rule<span class="token punctuation">.</span>endpoint<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">**</span>view_args<span class="token punctuation">)</span> 

<span class="token keyword">def</span> <span class="token function">finalize_request</span><span class="token punctuation">(</span>
        self<span class="token punctuation">,</span>
        rv<span class="token punctuation">:</span> ft<span class="token punctuation">.</span>ResponseReturnValue <span class="token operator">|</span> HTTPException<span class="token punctuation">,</span>
        from_error_handler<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Response<span class="token punctuation">:</span>
        response <span class="token operator">=</span> self<span class="token punctuation">.</span>make_response<span class="token punctuation">(</span>rv<span class="token punctuation">)</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            response <span class="token operator">=</span> self<span class="token punctuation">.</span>process_response<span class="token punctuation">(</span>response<span class="token punctuation">)</span>
            request_finished<span class="token punctuation">.</span>send<span class="token punctuation">(</span>
                self<span class="token punctuation">,</span> _async_wrapper<span class="token operator">=</span>self<span class="token punctuation">.</span>ensure_sync<span class="token punctuation">,</span> response<span class="token operator">=</span>response
            <span class="token punctuation">)</span>
        <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> from_error_handler<span class="token punctuation">:</span>
                <span class="token keyword">raise</span>
            self<span class="token punctuation">.</span>logger<span class="token punctuation">.</span>exception<span class="token punctuation">(</span>
                <span class="token string">&quot;Request finalizing failed with an error while handling an error&quot;</span>
            <span class="token punctuation">)</span>
        <span class="token keyword">return</span> response
    
<span class="token keyword">def</span> <span class="token function">process_response</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">:</span> Response<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Response<span class="token punctuation">:</span>
    ctx <span class="token operator">=</span> request_ctx<span class="token punctuation">.</span>_get_current_object<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># type: ignore[attr-defined]</span>

    <span class="token keyword">for</span> func <span class="token keyword">in</span> ctx<span class="token punctuation">.</span>_after_request_functions<span class="token punctuation">:</span>
        response <span class="token operator">=</span> self<span class="token punctuation">.</span>ensure_sync<span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>

    <span class="token keyword">for</span> name <span class="token keyword">in</span> chain<span class="token punctuation">(</span>request<span class="token punctuation">.</span>blueprints<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> name <span class="token keyword">in</span> self<span class="token punctuation">.</span>after_request_funcs<span class="token punctuation">:</span>
            <span class="token keyword">for</span> func <span class="token keyword">in</span> <span class="token builtin">reversed</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>after_request_funcs<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                response <span class="token operator">=</span> self<span class="token punctuation">.</span>ensure_sync<span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>session_interface<span class="token punctuation">.</span>is_null_session<span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>session<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>session_interface<span class="token punctuation">.</span>save_session<span class="token punctuation">(</span>self<span class="token punctuation">,</span> ctx<span class="token punctuation">.</span>session<span class="token punctuation">,</span> response<span class="token punctuation">)</span>

    <span class="token keyword">return</span> response
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们理一下运行顺序</p><ul><li><code>preprocess_request</code>:<strong>请求预处理</strong><ul><li>url_value_preprocessors：url解析</li><li>before_request_funcs：执行请求前置操作</li></ul></li><li>dispatch_request:<strong>分发请求</strong><ul><li>view_functions：执行视图函数</li></ul></li><li>finalize_request:<strong>完成请求</strong><ul><li>after_request_funcs：执行请求后置操作</li></ul></li></ul><h3 id="三、生命周期" tabindex="-1"><a class="header-anchor" href="#三、生命周期" aria-hidden="true">#</a> 三、生命周期</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Flask</span><span class="token punctuation">(</span>APP<span class="token punctuation">)</span><span class="token punctuation">:</span>
    
    <span class="token keyword">def</span> <span class="token function">wsgi_app</span><span class="token punctuation">(</span>
        self<span class="token punctuation">,</span> environ<span class="token punctuation">:</span> WSGIEnvironment<span class="token punctuation">,</span> start_response<span class="token punctuation">:</span> StartResponse
    <span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> cabc<span class="token punctuation">.</span>Iterable<span class="token punctuation">[</span><span class="token builtin">bytes</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token comment"># 1、先创建请求上下文</span>
        ctx <span class="token operator">=</span> self<span class="token punctuation">.</span>request_context<span class="token punctuation">(</span>environ<span class="token punctuation">)</span>
        error<span class="token punctuation">:</span> BaseException <span class="token operator">|</span> <span class="token boolean">None</span> <span class="token operator">=</span> <span class="token boolean">None</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                <span class="token comment"># 2、请求上下文放入ContextVars中</span>
                ctx<span class="token punctuation">.</span>push<span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token comment"># 3、执行请求处理函数</span>
                response <span class="token operator">=</span> self<span class="token punctuation">.</span>full_dispatch_request<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
                error <span class="token operator">=</span> e
                response <span class="token operator">=</span> self<span class="token punctuation">.</span>handle_exception<span class="token punctuation">(</span>e<span class="token punctuation">)</span>
            <span class="token keyword">except</span><span class="token punctuation">:</span>  <span class="token comment"># noqa: B001</span>
                error <span class="token operator">=</span> sys<span class="token punctuation">.</span>exc_info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
                <span class="token keyword">raise</span>
            <span class="token keyword">return</span> response<span class="token punctuation">(</span>environ<span class="token punctuation">,</span> start_response<span class="token punctuation">)</span>
        <span class="token keyword">finally</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token string">&quot;werkzeug.debug.preserve_context&quot;</span> <span class="token keyword">in</span> environ<span class="token punctuation">:</span>
                environ<span class="token punctuation">[</span><span class="token string">&quot;werkzeug.debug.preserve_context&quot;</span><span class="token punctuation">]</span><span class="token punctuation">(</span>_cv_app<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                environ<span class="token punctuation">[</span><span class="token string">&quot;werkzeug.debug.preserve_context&quot;</span><span class="token punctuation">]</span><span class="token punctuation">(</span>_cv_request<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

            <span class="token keyword">if</span> error <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span> <span class="token keyword">and</span> self<span class="token punctuation">.</span>should_ignore_error<span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">:</span>
                error <span class="token operator">=</span> <span class="token boolean">None</span>
			<span class="token comment"># 4、最后pop掉当前的请求上下文</span>
            ctx<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>error<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>1、先创建请求上下文</li><li>2、请求上下文放入ContextVars中，这里包括session,token，request</li><li>3、执行请求处理函数 <ul><li>请求预处理 <ul><li>url解析</li><li>执行请求前置操作</li></ul></li><li>分发请求 <ul><li>执行视图函数</li></ul></li><li>完成请求 <ul><li>执行请求后置操作</li></ul></li></ul></li><li>4、最后移除当前的请求上下文，为下一次请求准备</li></ul>`,13);function b(m,_){const e=t("ExternalLinkIcon");return o(),c("div",null,[u,n("ul",null,[r,n("li",null,[n("p",null,[s("session"),k,s(" 用来记录请求会话中的信息，针对的是用户信息。举例：session['name'] = "),n("a",d,[s("user.id"),l(e)]),s("，可以记录用户信息。还可以通过session.get('name')获取用户信息。")])])]),v])}const w=p(i,[["render",b],["__file","5、请求的生命周期.html.vue"]]);export{w as default};
