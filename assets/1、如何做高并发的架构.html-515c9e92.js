import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as r,e as h}from"./app-2d0f66e1.js";const d={},i=h('<h1 id="_1、高并发架构" tabindex="-1"><a class="header-anchor" href="#_1、高并发架构" aria-hidden="true">#</a> 1、高并发架构</h1><h3 id="一、系统级别并发——多大的并发对于系统会有影响-接口" tabindex="-1"><a class="header-anchor" href="#一、系统级别并发——多大的并发对于系统会有影响-接口" aria-hidden="true">#</a> 一、系统级别并发——多大的并发对于系统会有影响（接口）</h3><p>最大并发访问量，数据的吞吐量</p><p>一台机器需要可以接受的最大访问量是多少</p><p>cpu，内存这里指的是一台机器能够达到多大的并发量，机器的cpu,内存会有影响，所以出现一个概念叫负载均衡</p><p>异步任务——接口的处理速度</p><h3 id="二、数据级别的高并发——对于数据库的影响" tabindex="-1"><a class="header-anchor" href="#二、数据级别的高并发——对于数据库的影响" aria-hidden="true">#</a> 二、数据级别的高并发——对于数据库的影响</h3><p>数据库对于高并发的结构下需要的承受多大的压力，需不需要分库分表，读写分离</p><p>接口请求速度——缓存</p><h3 id="三、对于框架——高并发的选择的框架" tabindex="-1"><a class="header-anchor" href="#三、对于框架——高并发的选择的框架" aria-hidden="true">#</a> 三、对于框架——高并发的选择的框架</h3><p>选择适合高并发的框架</p><p>负载均衡所以出现了分布式</p><p>分布式数据的一致性</p><p>分布式的锁</p><p>分布式数据库的读写</p><h3 id="四、高并发就代表着数据量大" tabindex="-1"><a class="header-anchor" href="#四、高并发就代表着数据量大" aria-hidden="true">#</a> 四、高并发就代表着数据量大</h3><p>redis数据库的使用</p><h3 id="五、网络安全" tabindex="-1"><a class="header-anchor" href="#五、网络安全" aria-hidden="true">#</a> 五、网络安全</h3><h3 id="六、静态资源——动静分离" tabindex="-1"><a class="header-anchor" href="#六、静态资源——动静分离" aria-hidden="true">#</a> 六、静态资源——动静分离</h3>',19),t=[i];function n(c,p){return e(),r("div",null,t)}const o=a(d,[["render",n],["__file","1、如何做高并发的架构.html.vue"]]);export{o as default};
