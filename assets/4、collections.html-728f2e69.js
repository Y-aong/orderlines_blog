import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-2d0f66e1.js";const p={},e=t(`<h1 id="_4、内置模块collections" tabindex="-1"><a class="header-anchor" href="#_4、内置模块collections" aria-hidden="true">#</a> 4、内置模块collections</h1><h3 id="一、counter-统计对象的个数" tabindex="-1"><a class="header-anchor" href="#一、counter-统计对象的个数" aria-hidden="true">#</a> 一、Counter--统计对象的个数</h3><p>Counter类可以统计对象的个数， 它是字典的子类, 它有3种创建方法, 它支持访问缺失键, 更新计数器, 返回top N数据, 算术和集合操作，下面讲解Counter类的用法</p><h4 id="_1-创建" tabindex="-1"><a class="header-anchor" href="#_1-创建" aria-hidden="true">#</a> 1. 创建</h4><p>Counter有3种创建对象的方法</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> collections <span class="token keyword">import</span> Counter

c1 <span class="token operator">=</span> Counter<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment"># 创建一个空的Counter对象</span>
c2 <span class="token operator">=</span> Counter<span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>      <span class="token comment"># 从一个可迭代对象(列表,元组,字典,字符串)创建</span>
c3 <span class="token operator">=</span> Counter<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>      <span class="token comment"># 从一组键值对创建</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>c2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>c3<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>程序输出结果</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Counter<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;l&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;o&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;h&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
Counter<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>只看c2的话，不禁让人感到以后，使用字符串的方法不是可以实现相同的功能么？</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>word <span class="token operator">=</span> <span class="token string">&#39;hello world&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>word<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">&#39;h&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>word<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">&#39;l&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其实不然，虽然列表，字符串都提供了count方法，但是想要查看所有元素的数量，却需要你逐个调用才能获取，而Counter类则要简单便捷的多。</p><h4 id="_2-访问缺失的键" tabindex="-1"><a class="header-anchor" href="#_2-访问缺失的键" aria-hidden="true">#</a> 2. 访问缺失的键</h4><p>Counter虽然是字典的子类，但访问缺失的键时，不会引发KeyError, 而是返回0</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> collections <span class="token keyword">import</span> Counter

c1 <span class="token operator">=</span> Counter<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment"># 创建一个空的Counter对象</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>c1<span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-计数器更新" tabindex="-1"><a class="header-anchor" href="#_3-计数器更新" aria-hidden="true">#</a> 3. 计数器更新</h4><p>更新有两种方法，一种是使用update方法，一种是使用subtract方法， update方法用来新增计数， subtract方法用来减少计数， 分别来演示</p><p><strong>使用update</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> collections <span class="token keyword">import</span> Counter

c1 <span class="token operator">=</span> Counter<span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>
c1<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 使用另一个iterable对象更新</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>c1<span class="token punctuation">[</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment"># 3</span>

c2 <span class="token operator">=</span> Counter<span class="token punctuation">(</span><span class="token string">&#39;world&#39;</span><span class="token punctuation">)</span>
c1<span class="token punctuation">.</span>update<span class="token punctuation">(</span>c2<span class="token punctuation">)</span>       <span class="token comment"># 使用另一个Counter对象更新</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>c1<span class="token punctuation">[</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment"># 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>使用subtract</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> collections <span class="token keyword">import</span> Counter

c1 <span class="token operator">=</span> Counter<span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>
c1<span class="token punctuation">.</span>subtract<span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 使用另一个iterable对象更新</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>c1<span class="token punctuation">[</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment"># 1</span>

c2 <span class="token operator">=</span> Counter<span class="token punctuation">(</span><span class="token string">&#39;world&#39;</span><span class="token punctuation">)</span>
c1<span class="token punctuation">.</span>subtract<span class="token punctuation">(</span>c2<span class="token punctuation">)</span>       <span class="token comment"># 使用另一个Counter对象更新</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>c1<span class="token punctuation">[</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment"># 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-键的删除" tabindex="-1"><a class="header-anchor" href="#_4-键的删除" aria-hidden="true">#</a> 4. 键的删除</h4><p>同字典一样，使用del即可删除键值对</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> collections <span class="token keyword">import</span> Counter

c1 <span class="token operator">=</span> Counter<span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">del</span> c1<span class="token punctuation">[</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>c1<span class="token punctuation">[</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment"># 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-elements" tabindex="-1"><a class="header-anchor" href="#_5-elements" aria-hidden="true">#</a> 5. elements()</h4><p>elements()返回一个迭代器，一个元素的计数是多少，在迭代器中就会有多少</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> collections <span class="token keyword">import</span> Counter

c1 <span class="token operator">=</span> Counter<span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>
lst <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>c1<span class="token punctuation">.</span>elements<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span>      <span class="token comment"># [&#39;h&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;, &#39;o&#39;, &#39; &#39;, &#39;w&#39;, &#39;r&#39;, &#39;d&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-most-common-n" tabindex="-1"><a class="header-anchor" href="#_6-most-common-n" aria-hidden="true">#</a> 6. most_common([n])</h4><p>most_common返回top N的列表，列表里的元素是元组，如果计数相同，排列无指定顺序, 如果不指定n， 则返回所有元素</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> collections <span class="token keyword">import</span> Counter

c1 <span class="token operator">=</span> Counter<span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>c1<span class="token punctuation">.</span>most_common<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment"># [(&#39;l&#39;, 3), (&#39;o&#39;, 2)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-算术和集合操作" tabindex="-1"><a class="header-anchor" href="#_7-算术和集合操作" aria-hidden="true">#</a> 7. 算术和集合操作</h4><p>Counter类还支持+、-、&amp;、|操作， &amp;和|操作分别返回两个Counter对象各元素的最小值和最大值， 需要强调一点， 通过算数和集合操作得到Counter对象将删除计数值小于1的元素</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> collections <span class="token keyword">import</span> Counter

c <span class="token operator">=</span> Counter<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
d <span class="token operator">=</span> Counter<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>c <span class="token operator">+</span> d<span class="token punctuation">)</span>  <span class="token comment"># Counter({&#39;b&#39;: 5, &#39;a&#39;: 3})</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>c <span class="token operator">-</span> d<span class="token punctuation">)</span>  <span class="token comment"># Counter({&#39;b&#39;: 1})</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>c <span class="token operator">&amp;</span> d<span class="token punctuation">)</span>  <span class="token comment"># Counter({&#39;b&#39;: 2, &#39;a&#39;: 1})</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>c <span class="token operator">|</span> d<span class="token punctuation">)</span>  <span class="token comment"># Counter({&#39;b&#39;: 3, &#39;a&#39;: 2})</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,32),o=[e];function c(l,i){return s(),a("div",null,o)}const d=n(p,[["render",c],["__file","4、collections.html.vue"]]);export{d as default};
