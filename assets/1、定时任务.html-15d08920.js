const e=JSON.parse('{"key":"v-4a876332","path":"/posts/%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/1%E3%80%81%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1.html","title":"1、定时任务的设计和思路","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2024-10-12T00:00:00.000Z","category":["模块设计","定时任务"],"tag":["定时任务"],"star":true,"description":"1、定时任务的设计和思路 一、Python中定时任务模块 1. Celery Celery 是一个分布式任务队列，它不仅支持简单的任务调度，还可以处理复杂的任务工作流。对于已经使用了Celery的项目来说，可以很方便地添加定时任务功能。然而，对于不需要分布式处理能力的小型应用或项目来说，可能显得过于重量级。 优点：支持大规模的任务调度，拥有良好的社区支持。 缺点：配置相对复杂，需要额外的消息中间件（如RabbitMQ, Redis）来协调任务分发。","head":[["meta",{"property":"og:url","content":"https://y-aong.github.io/orderlines_blog/orderlines_blog/posts/%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1/1%E3%80%81%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1.html"}],["meta",{"property":"og:site_name","content":"ORDERLINES"}],["meta",{"property":"og:title","content":"1、定时任务的设计和思路"}],["meta",{"property":"og:description","content":"1、定时任务的设计和思路 一、Python中定时任务模块 1. Celery Celery 是一个分布式任务队列，它不仅支持简单的任务调度，还可以处理复杂的任务工作流。对于已经使用了Celery的项目来说，可以很方便地添加定时任务功能。然而，对于不需要分布式处理能力的小型应用或项目来说，可能显得过于重量级。 优点：支持大规模的任务调度，拥有良好的社区支持。 缺点：配置相对复杂，需要额外的消息中间件（如RabbitMQ, Redis）来协调任务分发。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-03-17T09:50:53.000Z"}],["meta",{"property":"article:author","content":"Y-aong"}],["meta",{"property":"article:tag","content":"定时任务"}],["meta",{"property":"article:published_time","content":"2024-10-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-17T09:50:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1、定时任务的设计和思路\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-10-12T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-17T09:50:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Y-aong\\",\\"url\\":\\"https://github.com/Y-aong\\"}]}"]]},"headers":[{"level":3,"title":"一、Python中定时任务模块","slug":"一、python中定时任务模块","link":"#一、python中定时任务模块","children":[]},{"level":3,"title":"二、定时任务的实现原理","slug":"二、定时任务的实现原理","link":"#二、定时任务的实现原理","children":[]},{"level":3,"title":"三、定时任务的类型","slug":"三、定时任务的类型","link":"#三、定时任务的类型","children":[]},{"level":3,"title":"四、定时任务设计的注意点","slug":"四、定时任务设计的注意点","link":"#四、定时任务设计的注意点","children":[]}],"git":{"createdTime":1742205053000,"updatedTime":1742205053000,"contributors":[{"name":"Y-aong","email":"1627469727@qq.com","commits":1}]},"readingTime":{"minutes":8.2,"words":2460},"filePathRelative":"posts/模块设计/1、定时任务.md","localizedDate":"October 12, 2024","excerpt":"<h1> 1、定时任务的设计和思路</h1>\\n<h3> 一、Python中定时任务模块</h3>\\n<h4> 1. Celery</h4>\\n<p>Celery 是一个分布式任务队列，它不仅支持简单的任务调度，还可以处理复杂的任务工作流。对于已经使用了Celery的项目来说，可以很方便地添加定时任务功能。然而，对于不需要分布式处理能力的小型应用或项目来说，可能显得过于重量级。</p>\\n<ul>\\n<li><strong>优点</strong>：支持大规模的任务调度，拥有良好的社区支持。</li>\\n<li><strong>缺点</strong>：配置相对复杂，需要额外的消息中间件（如RabbitMQ, Redis）来协调任务分发。</li>\\n</ul>","autoDesc":true}');export{e as data};
