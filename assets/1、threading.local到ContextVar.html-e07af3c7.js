const t=JSON.parse('{"key":"v-4040957c","path":"/posts/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/Flask%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/1%E3%80%81threading.local%E5%88%B0ContextVar.html","title":"1、localstock到ContextVar","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2024-03-05T00:00:00.000Z","category":["源码分析","flask"],"tag":["源码分析","flask"],"star":true,"description":"1、localstock到ContextVar 问题引入 当前flask版本为3.0.2，记得之前flask实现线程隔离的时候是使用localstock来实现的，现在再来看源码出现了ContextVar让我感觉比较陌生，接下来我们就来好好看看flask为什么要使用ContextVar。 源码对比 旧版本global.py","head":[["meta",{"property":"og:url","content":"https://y-aong.github.io/orderlines_blog/orderlines_blog/posts/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/Flask%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/1%E3%80%81threading.local%E5%88%B0ContextVar.html"}],["meta",{"property":"og:site_name","content":"ORDERLINES"}],["meta",{"property":"og:title","content":"1、localstock到ContextVar"}],["meta",{"property":"og:description","content":"1、localstock到ContextVar 问题引入 当前flask版本为3.0.2，记得之前flask实现线程隔离的时候是使用localstock来实现的，现在再来看源码出现了ContextVar让我感觉比较陌生，接下来我们就来好好看看flask为什么要使用ContextVar。 源码对比 旧版本global.py"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-03-17T09:50:53.000Z"}],["meta",{"property":"article:author","content":"Y-aong"}],["meta",{"property":"article:tag","content":"源码分析"}],["meta",{"property":"article:tag","content":"flask"}],["meta",{"property":"article:published_time","content":"2024-03-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-17T09:50:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1、localstock到ContextVar\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-05T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-17T09:50:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Y-aong\\",\\"url\\":\\"https://github.com/Y-aong\\"}]}"]]},"headers":[{"level":3,"title":"问题引入","slug":"问题引入","link":"#问题引入","children":[]},{"level":3,"title":"一、两点疑问","slug":"一、两点疑问","link":"#一、两点疑问","children":[]},{"level":3,"title":"二、线程隔离","slug":"二、线程隔离","link":"#二、线程隔离","children":[]},{"level":3,"title":"三、flask是不是不再使用LocalStock来处理上下文了","slug":"三、flask是不是不再使用localstock来处理上下文了","link":"#三、flask是不是不再使用localstock来处理上下文了","children":[]}],"git":{"createdTime":1736258707000,"updatedTime":1742205053000,"contributors":[{"name":"Y-aong","email":"1627469727@qq.com","commits":2}]},"readingTime":{"minutes":6.24,"words":1871},"filePathRelative":"posts/源码分析/Flask源码分析/1、threading.local到ContextVar.md","localizedDate":"March 5, 2024","excerpt":"<h1> 1、localstock到ContextVar</h1>\\n<h3> 问题引入</h3>\\n<p>当前flask版本为<code>3.0.2</code>，记得之前flask实现线程隔离的时候是使用<code>localstock</code>来实现的，现在再来看源码出现了ContextVar让我感觉比较陌生，接下来我们就来好好看看flask为什么要使用ContextVar。</p>\\n<p>源码对比</p>\\n<p><a href=\\"http://xn--global-2l2m17fk33b.py\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">旧版本global.py</a></p>","autoDesc":true}');export{t as data};
