const t=JSON.parse('{"key":"v-077f7be6","path":"/posts/Devops/9%E3%80%81%E8%AF%BB%E5%90%8E%E6%84%9F%E2%80%94%E2%80%94%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90.html","title":"9、持续集成、快速反馈","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2025-03-09T00:00:00.000Z","category":["devops"],"tag":["devops"],"star":true,"description":"9、持续集成、快速反馈 持续集成（Continuous Integration, CI）不仅是技术实践，更是构建高质量软件和高效团队协作的基石。它通过频繁的代码集成、自动化构建与测试，将开发过程中的风险前置，为持续交付奠定了坚实的基础。以下结合书中观点与个人思考，思考持续集成的意义、挑战与启示。 一、持续集成的核心：频繁集成，快速反馈 书中指出，持续集成的核心原则是开发人员每天多次将代码集成到主干，并通过自动化构建和测试快速验证代码的正确性。这一过程打破了传统开发中“各自为战”的模式，将分散的代码变更整合为一个稳定、可运行的整体。","head":[["meta",{"property":"og:url","content":"https://y-aong.github.io/orderlines_blog/orderlines_blog/posts/Devops/9%E3%80%81%E8%AF%BB%E5%90%8E%E6%84%9F%E2%80%94%E2%80%94%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90.html"}],["meta",{"property":"og:site_name","content":"ORDERLINES"}],["meta",{"property":"og:title","content":"9、持续集成、快速反馈"}],["meta",{"property":"og:description","content":"9、持续集成、快速反馈 持续集成（Continuous Integration, CI）不仅是技术实践，更是构建高质量软件和高效团队协作的基石。它通过频繁的代码集成、自动化构建与测试，将开发过程中的风险前置，为持续交付奠定了坚实的基础。以下结合书中观点与个人思考，思考持续集成的意义、挑战与启示。 一、持续集成的核心：频繁集成，快速反馈 书中指出，持续集成的核心原则是开发人员每天多次将代码集成到主干，并通过自动化构建和测试快速验证代码的正确性。这一过程打破了传统开发中“各自为战”的模式，将分散的代码变更整合为一个稳定、可运行的整体。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-03-17T09:50:53.000Z"}],["meta",{"property":"article:author","content":"Y-aong"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:published_time","content":"2025-03-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-17T09:50:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"9、持续集成、快速反馈\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-09T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-17T09:50:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Y-aong\\",\\"url\\":\\"https://github.com/Y-aong\\"}]}"]]},"headers":[{"level":3,"title":"一、持续集成的核心：频繁集成，快速反馈","slug":"一、持续集成的核心-频繁集成-快速反馈","link":"#一、持续集成的核心-频繁集成-快速反馈","children":[]},{"level":3,"title":"二、持续集成的挑战与实践启示","slug":"二、持续集成的挑战与实践启示","link":"#二、持续集成的挑战与实践启示","children":[]},{"level":3,"title":"三、我的观点：持续集成是团队协作的“照妖镜”","slug":"三、我的观点-持续集成是团队协作的-照妖镜","link":"#三、我的观点-持续集成是团队协作的-照妖镜","children":[]}],"git":{"createdTime":1742205053000,"updatedTime":1742205053000,"contributors":[{"name":"Y-aong","email":"1627469727@qq.com","commits":1}]},"readingTime":{"minutes":5.3,"words":1591},"filePathRelative":"posts/Devops/9、读后感——持续集成.md","localizedDate":"March 9, 2025","excerpt":"<h1> 9、持续集成、快速反馈</h1>\\n<p><strong>持续集成（Continuous Integration, CI）不仅是技术实践，更是构建高质量软件和高效团队协作的基石</strong>。它通过频繁的代码集成、自动化构建与测试，将开发过程中的风险前置，为持续交付奠定了坚实的基础。以下结合书中观点与个人思考，思考持续集成的意义、挑战与启示。</p>\\n<h3> <strong>一、持续集成的核心：频繁集成，快速反馈</strong></h3>\\n<p>书中指出，持续集成的核心原则是<strong>开发人员每天多次将代码集成到主干，并通过自动化构建和测试快速验证代码的正确性</strong>。这一过程打破了传统开发中“各自为战”的模式，将分散的代码变更整合为一个稳定、可运行的整体。</p>","autoDesc":true}');export{t as data};
