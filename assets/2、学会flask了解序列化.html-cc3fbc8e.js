const n=JSON.parse(`{"key":"v-08ef114a","path":"/posts/Python/Flask%E5%AD%A6%E4%B9%A0/2%E3%80%81%E5%AD%A6%E4%BC%9Aflask%E4%BA%86%E8%A7%A3%E5%BA%8F%E5%88%97%E5%8C%96.html","title":"2、flask序列化","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2023-07-15T00:00:00.000Z","category":["python","flask"],"tag":["序列化"],"description":"2、flask序列化 一、为什么需要序列化 序列化常见的使用场景是web，比如一个接口需要返回一个对象，这个对象不可以被flask的jsonify函数所序列化 @api.route('', methods=[\\"GET\\"]) @auth.login_required def get_user(): uid = g.user.uid user = User.query.filter_by(id=uid).first_or_404_for_api() return jsonify(user)","head":[["meta",{"property":"og:url","content":"https://y-aong.github.io/orderlines_blog/orderlines_blog/posts/Python/Flask%E5%AD%A6%E4%B9%A0/2%E3%80%81%E5%AD%A6%E4%BC%9Aflask%E4%BA%86%E8%A7%A3%E5%BA%8F%E5%88%97%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"ORDERLINES"}],["meta",{"property":"og:title","content":"2、flask序列化"}],["meta",{"property":"og:description","content":"2、flask序列化 一、为什么需要序列化 序列化常见的使用场景是web，比如一个接口需要返回一个对象，这个对象不可以被flask的jsonify函数所序列化 @api.route('', methods=[\\"GET\\"]) @auth.login_required def get_user(): uid = g.user.uid user = User.query.filter_by(id=uid).first_or_404_for_api() return jsonify(user)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"Y-aong"}],["meta",{"property":"article:tag","content":"序列化"}],["meta",{"property":"article:published_time","content":"2023-07-15T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2、flask序列化\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-15T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Y-aong\\",\\"url\\":\\"https://github.com/Y-aong\\"}]}"]]},"headers":[{"level":3,"title":"一、为什么需要序列化","slug":"一、为什么需要序列化","link":"#一、为什么需要序列化","children":[]},{"level":3,"title":"二、问题为什么对象不可以直接被序列化","slug":"二、问题为什么对象不可以直接被序列化","link":"#二、问题为什么对象不可以直接被序列化","children":[]},{"level":3,"title":"三、自定义flask的序列化","slug":"三、自定义flask的序列化","link":"#三、自定义flask的序列化","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.97,"words":591},"filePathRelative":"posts/Python/Flask学习/2、学会flask了解序列化.md","localizedDate":"July 15, 2023","excerpt":"<h1> 2、flask序列化</h1>\\n<h3> <strong>一、为什么需要序列化</strong></h3>\\n<ul>\\n<li>序列化常见的使用场景是web，比如一个接口需要返回一个对象，这个对象不可以被<code>flask</code>的<code>jsonify</code>函数所序列化</li>\\n</ul>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token decorator annotation punctuation\\">@api<span class=\\"token punctuation\\">.</span>route</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">''</span><span class=\\"token punctuation\\">,</span> methods<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"GET\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token decorator annotation punctuation\\">@auth<span class=\\"token punctuation\\">.</span>login_required</span>\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">get_user</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    uid <span class=\\"token operator\\">=</span> g<span class=\\"token punctuation\\">.</span>user<span class=\\"token punctuation\\">.</span>uid\\n    user <span class=\\"token operator\\">=</span> User<span class=\\"token punctuation\\">.</span>query<span class=\\"token punctuation\\">.</span>filter_by<span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">id</span><span class=\\"token operator\\">=</span>uid<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>first_or_404_for_api<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> jsonify<span class=\\"token punctuation\\">(</span>user<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
