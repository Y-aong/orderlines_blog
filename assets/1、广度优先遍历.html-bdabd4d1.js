const t=JSON.parse('{"key":"v-48a7f23a","path":"/posts/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88/1%E3%80%81%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86.html","title":"1、广度优先遍历","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2024-04-08T00:00:00.000Z","category":["算法笔记","dfs"],"tag":["dfs"],"description":"1、广度优先遍历 一、基础概念 bfs，这个算法我一开始接触的时候简直就是一脸懵，在学习回溯算法的时候就看到有的题解中提到了dfs,学习递归的时候也有人提到bfs，它的出现频率特别高。在学习二叉树时候bfs的出现频率更高。终于在学习图论的时候我来把它搞清楚。 dfs是可一个方向去搜，不到黄河不回头，直到遇到绝境了，搜不下去了，再换方向（换方向的过程就涉及到了回溯）。 下面我借用代码随想录中的图片进行解释 上面说道dfs是可一个方向搜，不到黄河不回头。 那么我们来举一个例子。","head":[["meta",{"property":"og:url","content":"https://y-aong.github.io/orderlines_blog/orderlines_blog/posts/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E7%AE%97%E6%B3%95%E6%8A%80%E5%B7%A7/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88/1%E3%80%81%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86.html"}],["meta",{"property":"og:site_name","content":"ORDERLINES"}],["meta",{"property":"og:title","content":"1、广度优先遍历"}],["meta",{"property":"og:description","content":"1、广度优先遍历 一、基础概念 bfs，这个算法我一开始接触的时候简直就是一脸懵，在学习回溯算法的时候就看到有的题解中提到了dfs,学习递归的时候也有人提到bfs，它的出现频率特别高。在学习二叉树时候bfs的出现频率更高。终于在学习图论的时候我来把它搞清楚。 dfs是可一个方向去搜，不到黄河不回头，直到遇到绝境了，搜不下去了，再换方向（换方向的过程就涉及到了回溯）。 下面我借用代码随想录中的图片进行解释 上面说道dfs是可一个方向搜，不到黄河不回头。 那么我们来举一个例子。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-03-17T09:50:53.000Z"}],["meta",{"property":"article:author","content":"Y-aong"}],["meta",{"property":"article:tag","content":"dfs"}],["meta",{"property":"article:published_time","content":"2024-04-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-17T09:50:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1、广度优先遍历\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-08T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-17T09:50:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Y-aong\\",\\"url\\":\\"https://github.com/Y-aong\\"}]}"]]},"headers":[{"level":3,"title":"一、基础概念","slug":"一、基础概念","link":"#一、基础概念","children":[]},{"level":3,"title":"二、dfs其他","slug":"二、dfs其他","link":"#二、dfs其他","children":[]}],"git":{"createdTime":1742205053000,"updatedTime":1742205053000,"contributors":[{"name":"Y-aong","email":"1627469727@qq.com","commits":1}]},"readingTime":{"minutes":3.09,"words":928},"filePathRelative":"posts/算法笔记/算法技巧/广度优先/1、广度优先遍历.md","localizedDate":"April 8, 2024","excerpt":"<h1> 1、广度优先遍历</h1>\\n<h3> 一、基础概念</h3>\\n<p>bfs，这个算法我一开始接触的时候简直就是一脸懵，在学习回溯算法的时候就看到有的题解中提到了dfs,学习递归的时候也有人提到bfs，它的出现频率特别高。在学习二叉树时候bfs的出现频率更高。终于在学习图论的时候我来把它搞清楚。</p>\\n<p>dfs是<strong>可一个方向去搜，不到黄河不回头，直到遇到绝境了，搜不下去了，再换方向</strong>（换方向的过程就涉及到了回溯）。</p>\\n<p>下面我借用代码随想录中的图片进行解释</p>\\n<p>上面说道dfs是可一个方向搜，不到黄河不回头。 那么我们来举一个例子。</p>","autoDesc":true}');export{t as data};
